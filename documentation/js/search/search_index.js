var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.732,1,1.239]],["body/components/AppComponent.html",[0,1.182,1,2.253,2,1.798,3,0.709,4,0.611,5,1.813,6,1.813,7,1.813,8,0.52,9,2.505,10,0.709,11,1.813,12,2.96,13,2.96,14,2.362,15,2.054,16,2.054,17,2.362,18,4.501,19,2.362,20,4.047,21,2.362,22,4.047,23,0.436,24,0.796,25,2,26,0.709,27,0.051,28,1.38,29,1.38,30,1.212,31,2.054,32,4.047,33,1.064,34,3.106,35,1.063,36,1.064,37,1.813,38,0.709,39,0.611,40,1.813,41,2.054,42,2.362,43,1.813,44,2.784,45,1.813,46,1.216,47,1.813,48,1.38,49,0.678,50,1.813,51,1.38,52,1.813,53,1.38,54,1.38,55,1.813,56,1.813,57,1.813,58,0.037,59,0.037]],["title/injectables/AuthService.html",[60,1.088,61,1.893]],["body/injectables/AuthService.html",[3,0.936,4,0.806,8,0.687,14,2.394,27,0.05,35,1.077,36,1.405,38,0.936,39,0.806,58,0.044,59,0.044,60,1.875,61,3.263,62,2.394,63,3.307,64,2.784]],["title/interfaces/MockVideo.html",[65,1.415,66,1.415]],["body/interfaces/MockVideo.html",[3,0.629,4,0.542,8,0.462,10,1.144,23,0.387,24,0.735,25,2.179,26,1.144,27,0.051,28,2.451,38,0.629,49,0.905,58,0.034,59,0.034,65,1.898,66,1.898,67,1.872,68,2.224,69,1.872,70,1.4,71,4.361,72,1.822,73,2.489,74,2.309,75,1.913,76,2.655,77,2.489,78,2.183,79,1.898,80,1.898,81,2.183,82,2.539,83,1.898,84,2.183]],["title/classes/Thumbnail.html",[39,0.548,75,1.088]],["body/classes/Thumbnail.html",[3,0.375,4,0.323,8,0.275,10,0.932,23,0.231,24,0.758,25,1.58,26,0.811,27,0.052,28,2.185,33,1.461,35,0.432,38,0.585,39,0.758,46,0.494,49,0.889,58,0.023,59,0.023,70,1.599,72,0.878,73,1.805,74,1.599,75,2.083,76,0.96,77,1.805,78,0.96,79,0.835,80,2.239,81,2.489,82,2.138,83,1.599,84,1.838,85,1.116,86,1.116,87,2.545,88,3.403,89,2.539,90,2.539,91,2.539,92,2.066,93,3.557,94,3.557,95,0.731,96,2.539,97,2.562,98,1.599,99,2.539,100,0.641,101,2.073,102,1.838,103,2.539,104,2.994,105,1.644,106,1.644,107,1.644,108,1.644,109,3.919,110,1.896,111,1.644,112,1.644,113,1.644,114,1.644,115,1.838,116,1.326,117,1.326,118,1.326,119,1.326,120,1.326,121,1.326,122,1.326,123,1.326,124,1.496,125,2.066,126,1.326,127,2.066,128,1.326,129,2.066,130,1.326,131,2.066,132,0.731,133,1.326,134,2.066,135,1.326,136,2.066,137,1.326,138,2.066,139,1.326,140,1.895,141,2.704,142,1.74,143,1.326,144,2.066,145,1.326,146,2.066,147,1.326,148,2.066,149,1.326]],["title/classes/Video.html",[39,0.548,49,0.467]],["body/classes/Video.html",[3,0.331,4,0.285,8,0.243,10,1.018,23,0.203,24,0.713,25,1.875,26,0.963,27,0.052,28,2.27,33,1.657,35,0.38,38,0.529,39,0.713,46,0.435,49,0.91,58,0.021,59,0.021,70,1.472,72,1.242,73,2.142,74,1.963,75,2.022,76,1.692,77,2.142,78,1.353,79,1.177,80,1.682,81,2.116,82,2.461,83,1.84,84,2.116,85,0.983,86,0.983,87,2.619,88,3.503,89,1.168,90,1.168,91,1.168,92,1.87,93,2.672,94,2.672,95,0.644,96,2.338,98,1.472,99,2.338,100,0.565,101,1.963,102,1.692,103,2.338,104,2.25,109,3.978,110,1.925,115,2.116,116,1.168,117,2.338,118,2.338,119,2.338,120,2.338,121,2.338,122,2.338,123,2.338,124,1.353,125,1.87,126,1.168,127,1.87,128,1.168,129,1.87,130,1.168,131,1.87,132,0.644,133,1.168,134,1.87,135,1.168,136,1.87,137,1.168,138,1.87,139,1.168,140,1.804,141,2.605,142,1.968,143,1.168,144,1.87,145,1.168,146,1.87,147,1.168,148,1.87,149,1.168,150,2.319,151,1.448,152,1.448,153,1.448,154,1.448,155,1.448,156,1.448,157,1.448,158,1.448,159,1.448,160,1.448,161,1.448,162,1.448,163,1.448,164,1.448,165,1.448,166,1.448,167,1.448,168,1.448,169,1.448,170,1.448]],["title/components/VideoCardComponent.html",[0,0.732,48,1.239]],["body/components/VideoCardComponent.html",[0,1.177,1,1.042,2,1.484,3,0.535,4,0.461,5,1.369,6,1.369,7,1.369,8,0.393,10,0.762,11,1.369,12,2.72,13,2.72,15,1.696,16,1.696,17,1.95,19,1.95,21,1.95,23,0.329,26,0.762,27,0.052,33,1.334,35,1.114,36,0.804,37,1.369,38,0.535,39,0.461,40,1.369,41,1.696,42,1.95,43,1.369,44,2.476,45,1.369,46,1.17,47,1.369,48,2.071,49,0.905,50,1.369,51,1.042,52,1.369,53,1.042,54,1.042,55,1.369,56,1.369,57,1.369,58,0.031,59,0.031,70,1.696,72,0.804,83,1.696,95,1.042,98,1.696,100,0.915,102,1.95,110,0.915,124,1.369,171,2.879,172,2.879,173,1.891,174,2.694,175,3.758,176,3.341,177,3.341,178,3.891,179,3.341,180,3.341,181,1.95,182,4.241,183,3.341,184,2.345,185,4.022,186,3.341,187,2.694,188,2.694,189,3.341,190,2.345,191,2.694,192,2.694,193,1.696,194,1.592,195,2.345,196,3.341,197,1.369,198,1.592,199,1.891,200,2.345,201,2.345,202,3.341,203,3.341,204,3.341,205,3.341]],["title/injectables/VideoHttpService.html",[60,1.088,206,1.627]],["body/injectables/VideoHttpService.html",[3,0.396,4,0.641,8,0.291,10,0.836,14,1.014,23,0.244,24,0.526,25,0.772,26,0.744,27,0.052,28,1.449,29,1.188,30,1.043,31,2.12,33,1.355,35,1.21,36,0.595,38,0.396,39,0.342,46,0.804,49,0.699,54,2.21,58,0.024,59,0.024,60,1.043,62,1.014,64,1.18,66,2.007,71,2.157,72,0.917,73,0.882,74,0.882,75,0.678,76,1.014,77,0.882,80,1.358,88,1.18,95,0.772,98,1.358,100,1.043,101,1.358,104,2.685,110,1.629,115,1.014,124,1.903,132,0.772,140,1.449,141,2.308,181,1.561,193,1.358,197,1.014,199,1.401,206,2.138,207,3.368,208,1.401,209,1.561,210,2.953,211,2.675,212,2.675,213,3.261,214,3.662,215,3.662,216,3.261,217,1.737,218,3.662,219,2.675,220,3.954,221,2.675,222,2.675,223,2.675,224,3.662,225,2.675,226,1.737,227,4.176,228,4.92,229,4.176,230,4.176,231,1.737,232,2.157,233,1.737,234,3.954,235,1.737,236,2.675,237,4.491,238,2.675,239,2.675,240,2.675,241,2.675,242,2.007,243,2.675,244,2.157,245,2.675,246,1.737,247,1.401,248,1.737,249,1.401,250,1.737,251,1.737,252,1.401,253,1.737,254,1.737,255,2.157,256,1.737,257,1.18,258,1.18,259,1.737,260,1.737,261,2.675,262,1.737,263,1.737,264,3.662,265,2.675,266,1.737,267,1.737,268,1.737,269,1.737,270,2.63,271,1.737,272,2.675,273,1.737,274,1.737,275,1.737,276,1.737,277,1.737,278,1.737,279,1.737,280,1.737,281,2.675,282,1.737,283,1.737,284,1.737,285,1.737,286,1.737,287,1.737,288,2.675,289,1.18,290,1.737,291,1.401,292,1.737,293,1.401,294,1.737,295,1.401,296,1.737,297,1.401,298,2.675,299,1.401,300,1.737,301,1.401,302,1.737,303,1.737,304,1.737,305,1.737,306,1.737,307,1.737,308,1.737,309,1.737,310,1.737,311,1.737]],["title/components/VideoPlayerComponent.html",[0,0.732,51,1.239]],["body/components/VideoPlayerComponent.html",[0,1.153,1,0.988,2,1.429,3,0.508,4,0.437,5,1.298,6,1.298,7,1.298,8,0.372,10,0.508,11,1.298,12,2.672,13,2.821,15,1.633,16,1.633,17,1.877,19,1.877,21,1.877,23,0.312,24,0.632,27,0.051,29,1.679,30,1.474,31,1.633,33,1.505,35,1.087,36,0.762,37,1.298,38,0.508,39,0.437,40,1.298,41,1.633,42,1.877,43,1.298,44,2.416,45,1.298,46,0.967,47,1.298,48,0.988,49,0.837,50,1.298,51,1.84,52,1.298,53,0.988,54,1.679,55,1.298,56,1.298,57,1.298,58,0.029,59,0.029,74,1.633,80,1.633,87,2.324,100,1.255,110,1.255,171,3.108,181,1.877,185,3.338,188,2.594,191,3.338,193,2.102,194,2.184,198,1.51,209,2.416,289,2.565,312,3.691,313,1.794,314,3.216,315,3.047,316,3.778,317,3.216,318,3.216,319,4.14,320,4.14,321,4.14,322,2.224,323,4.14,324,3.216,325,4.14,326,3.216,327,2.224,328,4.577,329,2.594,330,3.216,331,2.224,332,3.216,333,3.216,334,2.224,335,3.216,336,3.216,337,3.216,338,2.224,339,3.216,340,3.216,341,3.216,342,2.224,343,2.224,344,1.794,345,2.224,346,2.224,347,3.216]],["title/injectables/VideoService.html",[60,1.088,348,1.627]],["body/injectables/VideoService.html",[3,0.721,4,0.621,8,0.529,10,0.721,14,1.845,23,0.444,24,0.805,27,0.051,29,1.404,30,1.233,33,1.403,35,1.075,36,1.083,38,0.721,39,0.621,49,0.868,54,2.304,58,0.037,59,0.037,60,1.597,62,1.845,64,2.146,95,2.017,98,2.078,101,2.437,132,1.819,140,2.017,197,1.845,209,2.389,348,2.803,349,2.549,350,3.301,351,4.093,352,5.395,353,4.801,354,4.093,355,3.872,356,4.093,357,3.301,358,4.093]],["title/components/VideosDashboardComponent.html",[0,0.732,53,1.239]],["body/components/VideosDashboardComponent.html",[0,1.064,1,0.815,2,1.239,3,0.418,4,0.361,5,1.071,6,1.071,7,1.071,8,0.307,10,0.636,11,1.071,12,2.49,13,2.49,15,1.415,16,1.415,17,1.627,19,1.627,21,1.627,23,0.473,24,0.663,26,0.769,27,0.051,29,0.815,30,0.716,33,1.52,35,1.064,36,0.629,38,0.418,39,0.361,40,1.071,41,1.415,42,1.627,43,1.627,44,2.199,45,1.071,46,1.013,47,1.071,48,1.674,49,0.799,50,1.071,51,0.815,52,1.071,53,1.8,54,2.288,55,2.365,56,1.071,57,1.071,58,0.025,59,0.025,72,0.629,87,2.057,95,1.239,100,0.716,101,1.712,110,1.315,140,1.239,142,1.245,172,1.245,175,1.479,181,1.627,193,1.712,194,2.557,197,1.071,206,2.199,209,1.968,210,1.479,270,3.038,348,2.667,350,2.248,355,1.479,357,1.479,359,3.685,360,3.685,361,1.479,362,2.787,363,2.787,364,3.372,365,2.787,366,2.787,367,3.372,368,3.372,369,3.372,370,3.767,371,2.787,372,3.372,373,1.834,374,1.834,375,1.893,376,2.787,377,3.372,378,3.372,379,3.372,380,3.372,381,3.372,382,3.767,383,3.372,384,3.372,385,3.372,386,3.372,387,1.834,388,1.834,389,1.834,390,1.834,391,1.479,392,1.834,393,1.834,394,1.834,395,1.834,396,1.834,397,2.787,398,2.787,399,3.767,400,1.834,401,2.787,402,2.787,403,2.787,404,2.787,405,2.787,406,1.834,407,1.834,408,1.834,409,1.834,410,1.834,411,1.834,412,1.834,413,1.834,414,2.787,415,1.834,416,1.834,417,1.834,418,1.834,419,1.834,420,1.834,421,1.834,422,1.834,423,2.787,424,2.787,425,1.834,426,2.787,427,2.787,428,2.787,429,2.787,430,2.787,431,2.787,432,1.834,433,1.834]],["title/interfaces/YouTubeVideo.html",[65,1.415,242,1.415]],["body/interfaces/YouTubeVideo.html",[3,0.626,4,0.54,8,0.46,10,0.966,23,0.385,24,0.733,25,1.657,26,1.143,27,0.051,28,2.43,31,2.756,35,0.721,38,0.626,49,0.909,58,0.034,59,0.034,65,2.149,67,1.864,69,1.864,70,1.893,72,1.556,73,1.893,75,1.91,77,1.893,78,2.176,79,1.893,81,2.176,83,1.893,84,2.176,242,1.893,255,2.214,289,3.083,291,3.662,293,3.662,295,3.662,297,3.662,299,3.662,301,3.662,434,2.214,435,3.728]],["title/coverage.html",[436,2.557]],["body/coverage.html",[0,1.233,1,1.324,8,0.499,9,2.403,26,0.68,27,0.051,39,0.774,48,1.324,49,0.499,51,1.324,53,1.324,58,0.036,59,0.036,60,1.721,61,2.023,63,2.403,65,2,66,1.513,68,2.403,69,2.674,75,1.163,79,1.513,86,2.674,132,1.324,171,2.674,172,2.023,173,2.403,206,1.74,207,2.403,208,2.403,242,1.513,257,2.023,258,2.023,312,2.403,313,2.403,348,1.74,349,2.403,359,2.403,360,2.403,361,2.403,434,2.403,436,2.023,437,2.403,438,2.403,439,2.98,440,2.98,441,3.176,442,5.014,443,2.403,444,5.113,445,5.113,446,2.403,447,2.403,448,2.403,449,2.403,450,2.403,451,2.403,452,2.403,453,3.176,454,3.176,455,3.939,456,5.345,457,3.939,458,2.98,459,3.939,460,4.412,461,2.98,462,2.98,463,2.98,464,2.403,465,2.023,466,2.98,467,2.98]],["title/dependencies.html",[468,1.893,469,2.696]],["body/dependencies.html",[27,0.051,36,1.239,37,2.111,58,0.041,59,0.041,198,2.455,249,2.916,315,2.916,344,2.916,375,2.455,465,2.455,469,2.916,470,3.616,471,5.44,472,3.616,473,4.831,474,3.616,475,3.616,476,3.616,477,4.831,478,3.594,479,3.616,480,3.616,481,2.916,482,3.616,483,3.616,484,3.616,485,3.616,486,3.616,487,3.616,488,3.616,489,3.616]],["title/miscellaneous/enumerations.html",[490,1.043,491,2.696]],["body/miscellaneous/enumerations.html",[23,0.563,27,0.049,30,2.037,31,2.408,58,0.043,59,0.043,87,2.408,115,2.769,140,2.108,252,3.825,490,1.782,491,3.233,492,4.743,493,4.009,494,4.009,495,4.009]],["title/miscellaneous/functions.html",[490,1.043,496,2.269]],["body/miscellaneous/functions.html",[10,1.008,23,0.5,24,0.868,26,1.008,27,0.048,46,1.328,49,0.88,58,0.04,59,0.04,66,2.668,72,1.514,100,1.723,102,3.142,110,1.723,242,2.668,247,3.562,257,2.999,258,2.999,453,2.875,454,3.871,490,1.584,496,2.42,497,4.417,498,3.565,499,4.417,500,4.417,501,3.565]],["title/index.html",[23,0.329,502,2.347,503,2.347]],["body/index.html",[0,0.898,2,1.261,4,0.369,8,0.314,15,0.953,27,0.047,41,0.953,46,0.564,58,0.031,59,0.026,132,0.834,174,1.514,187,3.605,192,2.759,193,0.953,232,3.074,329,1.514,375,2.323,391,1.514,436,3.035,437,3.301,438,2.289,478,2.289,481,1.514,496,1.927,504,2.838,505,3.421,506,1.878,507,3.812,508,1.878,509,2.838,510,1.878,511,1.878,512,2.838,513,2.838,514,2.838,515,3.421,516,2.838,517,3.421,518,3.421,519,2.838,520,2.289,521,4.802,522,4.603,523,1.878,524,1.878,525,1.878,526,2.838,527,2.838,528,1.878,529,1.878,530,3.812,531,4.093,532,1.878,533,3.812,534,1.878,535,1.878,536,4.305,537,1.878,538,1.878,539,3.421,540,2.838,541,1.878,542,1.878,543,1.878,544,1.878,545,1.878,546,1.878,547,2.838,548,1.878,549,1.878,550,1.878,551,1.878,552,1.878,553,1.878,554,2.838,555,1.878,556,1.878,557,3.812,558,1.878,559,1.878,560,4.093,561,1.878,562,2.838,563,1.878,564,2.838,565,1.878,566,1.878,567,1.878,568,1.878,569,3.421,570,1.878,571,2.838,572,1.878,573,4.093,574,3.812,575,2.838,576,2.838,577,1.878,578,1.878,579,1.878,580,1.878,581,3.421,582,2.838,583,2.838,584,1.878,585,1.878,586,2.838,587,2.838,588,1.878,589,1.878,590,4.603,591,2.838,592,2.838,593,3.421,594,1.878,595,1.878,596,4.305,597,3.421,598,3.812,599,4.093,600,3.421,601,4.305,602,3.812,603,1.878,604,3.421,605,3.812,606,1.878,607,1.878,608,1.878,609,1.878,610,1.878,611,1.878,612,2.838,613,1.878,614,3.421,615,1.878,616,1.878,617,1.878,618,2.838,619,2.838,620,1.878,621,1.878,622,2.838,623,1.878,624,1.878,625,3.812,626,1.878,627,1.878,628,1.878,629,1.878,630,1.878,631,1.878,632,2.838,633,2.838,634,4.711,635,4.305,636,1.878,637,1.878,638,1.878,639,1.878,640,2.838,641,3.421,642,1.878,643,1.878,644,1.878,645,1.878,646,1.878,647,1.878,648,1.878,649,1.878,650,1.878,651,1.878,652,1.878,653,1.878,654,1.878,655,1.878,656,1.878,657,1.878,658,1.878,659,1.878,660,1.878,661,1.878,662,1.878,663,1.878,664,1.878,665,1.878,666,1.878]],["title/modules.html",[667,3.038]],["body/modules.html",[27,0.045,58,0.045,59,0.045,667,3.514]],["title/overview.html",[668,3.038]],["body/overview.html",[2,1.884,27,0.045,58,0.045,59,0.045,62,2.475,67,2.878,85,2.878,668,3.419,669,4.24,670,4.24,671,4.901]],["title/properties.html",[24,0.657,468,1.893]],["body/properties.html",[24,0.848,27,0.048,58,0.045,59,0.045,520,3.478,672,4.313]],["title/miscellaneous/variables.html",[490,1.043,673,2.696]],["body/miscellaneous/variables.html",[16,2.141,23,0.465,26,1.115,27,0.052,29,2.292,30,2.012,58,0.039,59,0.039,141,2.461,244,2.67,441,2.67,443,3.742,446,3.742,447,2.67,448,3.401,449,2.67,450,3.401,451,2.67,452,3.401,464,2.67,465,2.863,490,1.471,673,2.67,674,3.311,675,3.311,676,3.311,677,3.311,678,4.217,679,4.217,680,4.217,681,3.311,682,3.311,683,3.311,684,3.311,685,3.311,686,3.311,687,3.311,688,3.311,689,3.311,690,3.311,691,3.311,692,3.311,693,3.311]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/MockVideo.html":{},"classes/Thumbnail.html":{},"classes/Video.html":{},"components/VideoCardComponent.html":{},"injectables/VideoHttpService.html":{},"components/VideoPlayerComponent.html":{},"injectables/VideoService.html":{},"components/VideosDashboardComponent.html":{},"interfaces/YouTubeVideo.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":444,"title":{},"body":{"coverage.html":{}}}],["0.0.0",{"_index":672,"title":{},"body":{"properties.html":{}}}],["0.14.3",{"_index":489,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":445,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":416,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["1/1",{"_index":457,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":440,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":456,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":240,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["18",{"_index":509,"title":{},"body":{"index.html":{}}}],["18.0.0",{"_index":471,"title":{},"body":{"dependencies.html":{}}}],["18.0.6",{"_index":481,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["18.2.14",{"_index":473,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":671,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":670,"title":{},"body":{"overview.html":{}}}],["3/3",{"_index":461,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":669,"title":{},"body":{"overview.html":{}}}],["4.18.2",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":458,"title":{},"body":{"coverage.html":{}}}],["5.3.5",{"_index":482,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":462,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":439,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":459,"title":{},"body":{"coverage.html":{}}}],["7.8.0",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":460,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":463,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":573,"title":{},"body":{"index.html":{}}}],["_'+idx",{"_index":432,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["_\\'+idx",{"_index":433,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["_author",{"_index":122,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{}}}],["_description",{"_index":119,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{}}}],["_height",{"_index":89,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{}}}],["_id",{"_index":117,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{}}}],["_thumbnail",{"_index":120,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{}}}],["_title",{"_index":118,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{}}}],["_uploaddate",{"_index":123,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{}}}],["_url",{"_index":90,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{}}}],["_visibility",{"_index":121,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{}}}],["_width",{"_index":91,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{}}}],["accessors",{"_index":92,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{}}}],["action",{"_index":651,"title":{},"body":{"index.html":{}}}],["activatedroute",{"_index":343,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["actual_component",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/VideoCardComponent.html":{},"components/VideoPlayerComponent.html":{},"components/VideosDashboardComponent.html":{}}}],["angular",{"_index":187,"title":{},"body":{"components/VideoCardComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":470,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":472,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":198,"title":{},"body":{"components/VideoCardComponent.html":{},"components/VideoPlayerComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":246,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["angular/compiler",{"_index":474,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/VideoCardComponent.html":{},"injectables/VideoHttpService.html":{},"components/VideoPlayerComponent.html":{},"injectables/VideoService.html":{},"components/VideosDashboardComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":475,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":476,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":477,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/VideoCardComponent.html":{},"components/VideoPlayerComponent.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":480,"title":{},"body":{"dependencies.html":{}}}],["angular/youtube",{"_index":344,"title":{},"body":{"components/VideoPlayerComponent.html":{},"dependencies.html":{}}}],["api",{"_index":224,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["apis",{"_index":559,"title":{},"body":{"index.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/VideoCardComponent.html":{},"components/VideoPlayerComponent.html":{},"components/VideosDashboardComponent.html":{}}}],["app.component.html",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/VideoCardComponent.html":{},"components/VideoPlayerComponent.html":{},"components/VideosDashboardComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":448,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":329,"title":{},"body":{"components/VideoPlayerComponent.html":{},"index.html":{}}}],["applicationconfig",{"_index":679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applications",{"_index":556,"title":{},"body":{"index.html":{}}}],["array",{"_index":229,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["arrow_back",{"_index":347,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["artifacts",{"_index":537,"title":{},"body":{"index.html":{}}}],["assurance",{"_index":548,"title":{},"body":{"index.html":{}}}],["authguard",{"_index":450,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authinterceptor",{"_index":452,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["author",{"_index":73,"title":{},"body":{"interfaces/MockVideo.html":{},"classes/Thumbnail.html":{},"classes/Video.html":{},"injectables/VideoHttpService.html":{},"interfaces/YouTubeVideo.html":{}}}],["authservice",{"_index":61,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["auto",{"_index":658,"title":{},"body":{"index.html":{}}}],["automatically",{"_index":527,"title":{},"body":{"index.html":{}}}],["available",{"_index":143,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{}}}],["back",{"_index":323,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["based",{"_index":236,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["before",{"_index":587,"title":{},"body":{"index.html":{}}}],["being",{"_index":404,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["below",{"_index":610,"title":{},"body":{"index.html":{}}}],["best",{"_index":512,"title":{},"body":{"index.html":{}}}],["blocked",{"_index":609,"title":{},"body":{"index.html":{}}}],["blocks",{"_index":653,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":398,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["bootstrap",{"_index":465,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(appcomponent",{"_index":691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bottom",{"_index":386,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["bound",{"_index":393,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["branches",{"_index":575,"title":{},"body":{"index.html":{}}}],["browser",{"_index":478,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["browser's",{"_index":325,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["build",{"_index":536,"title":{},"body":{"index.html":{}}}],["building",{"_index":552,"title":{},"body":{"index.html":{}}}],["buildoutput",{"_index":656,"title":{},"body":{"index.html":{}}}],["builds",{"_index":606,"title":{},"body":{"index.html":{}}}],["built",{"_index":508,"title":{},"body":{"index.html":{}}}],["called",{"_index":392,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["canactivatefn",{"_index":687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["card",{"_index":175,"title":{},"body":{"components/VideoCardComponent.html":{},"components/VideosDashboardComponent.html":{}}}],["card'},{'name",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/VideoCardComponent.html":{},"components/VideoPlayerComponent.html":{},"components/VideosDashboardComponent.html":{}}}],["card.component",{"_index":410,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["card.component.html",{"_index":179,"title":{},"body":{"components/VideoCardComponent.html":{}}}],["card.component.scss",{"_index":180,"title":{},"body":{"components/VideoCardComponent.html":{}}}],["card.component.ts",{"_index":173,"title":{},"body":{"components/VideoCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:22",{"_index":186,"title":{},"body":{"components/VideoCardComponent.html":{}}}],["card.component.ts:33",{"_index":190,"title":{},"body":{"components/VideoCardComponent.html":{}}}],["card/video",{"_index":172,"title":{},"body":{"components/VideoCardComponent.html":{},"components/VideosDashboardComponent.html":{},"coverage.html":{}}}],["change",{"_index":529,"title":{},"body":{"index.html":{}}}],["changedetection",{"_index":176,"title":{},"body":{"components/VideoCardComponent.html":{}}}],["changedetectionstrategy",{"_index":195,"title":{},"body":{"components/VideoCardComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":177,"title":{},"body":{"components/VideoCardComponent.html":{}}}],["checks",{"_index":586,"title":{},"body":{"index.html":{}}}],["chrome",{"_index":637,"title":{},"body":{"index.html":{}}}],["chromeheadless",{"_index":642,"title":{},"body":{"index.html":{}}}],["ci/cd",{"_index":585,"title":{},"body":{"index.html":{}}}],["class",{"_index":39,"title":{"classes/Thumbnail.html":{},"classes/Video.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Thumbnail.html":{},"classes/Video.html":{},"components/VideoCardComponent.html":{},"injectables/VideoHttpService.html":{},"components/VideoPlayerComponent.html":{},"injectables/VideoService.html":{},"components/VideosDashboardComponent.html":{},"coverage.html":{}}}],["classes",{"_index":85,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{},"overview.html":{}}}],["cli",{"_index":519,"title":{},"body":{"index.html":{}}}],["client",{"_index":221,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["code",{"_index":531,"title":{},"body":{"index.html":{}}}],["commit",{"_index":590,"title":{},"body":{"index.html":{}}}],["commits",{"_index":588,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":622,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/VideoCardComponent.html":{},"components/VideoPlayerComponent.html":{},"components/VideosDashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/VideoCardComponent.html":{},"components/VideoPlayerComponent.html":{},"components/VideosDashboardComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/VideoCardComponent.html":{},"components/VideoPlayerComponent.html":{},"components/VideosDashboardComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/VideoCardComponent.html":{},"components/VideoPlayerComponent.html":{},"components/VideosDashboardComponent.html":{},"index.html":{},"overview.html":{}}}],["config",{"_index":443,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configurations",{"_index":550,"title":{},"body":{"index.html":{}}}],["configured",{"_index":232,"title":{},"body":{"injectables/VideoHttpService.html":{},"index.html":{}}}],["consistency",{"_index":595,"title":{},"body":{"index.html":{}}}],["consistent",{"_index":564,"title":{},"body":{"index.html":{}}}],["console.log(error",{"_index":425,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["const",{"_index":270,"title":{},"body":{"injectables/VideoHttpService.html":{},"components/VideosDashboardComponent.html":{}}}],["constructor",{"_index":95,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{},"components/VideoCardComponent.html":{},"injectables/VideoHttpService.html":{},"injectables/VideoService.html":{},"components/VideosDashboardComponent.html":{}}}],["constructor(data",{"_index":96,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{}}}],["constructor(http",{"_index":217,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["constructor(private",{"_index":199,"title":{},"body":{"components/VideoCardComponent.html":{},"injectables/VideoHttpService.html":{}}}],["constructor(router",{"_index":184,"title":{},"body":{"components/VideoCardComponent.html":{}}}],["constructor(videohttpservice",{"_index":373,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["constructs",{"_index":98,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{},"components/VideoCardComponent.html":{},"injectables/VideoHttpService.html":{},"injectables/VideoService.html":{}}}],["containing",{"_index":103,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{}}}],["core/utils/video",{"_index":259,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["count",{"_index":234,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["coverage",{"_index":436,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["currently",{"_index":403,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["currentvideos",{"_index":422,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["dashboard",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/VideoCardComponent.html":{},"components/VideoPlayerComponent.html":{},"components/VideosDashboardComponent.html":{}}}],["dashboard.component.html",{"_index":365,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":366,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["dashboard.component.ts",{"_index":361,"title":{},"body":{"components/VideosDashboardComponent.html":{},"coverage.html":{}}}],["dashboard.component.ts:22",{"_index":400,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["dashboard.component.ts:29",{"_index":376,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["dashboard.component.ts:39",{"_index":374,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["dashboard.component.ts:48",{"_index":406,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["dashboard.component.ts:55",{"_index":389,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["dashboard.component.ts:64",{"_index":387,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["dashboard/videos",{"_index":360,"title":{},"body":{"components/VideosDashboardComponent.html":{},"coverage.html":{}}}],["data",{"_index":101,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{},"injectables/VideoHttpService.html":{},"injectables/VideoService.html":{},"components/VideosDashboardComponent.html":{}}}],["data.uploaddate",{"_index":139,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{}}}],["data?.author",{"_index":137,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{}}}],["data?.description",{"_index":130,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{}}}],["data?.height",{"_index":147,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{}}}],["data?.id",{"_index":126,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{}}}],["data?.title",{"_index":128,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{}}}],["data?.url",{"_index":145,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{}}}],["data?.visibility",{"_index":135,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{}}}],["data?.width",{"_index":149,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{}}}],["date",{"_index":83,"title":{},"body":{"interfaces/MockVideo.html":{},"classes/Thumbnail.html":{},"classes/Video.html":{},"components/VideoCardComponent.html":{},"interfaces/YouTubeVideo.html":{}}}],["datepipe",{"_index":178,"title":{},"body":{"components/VideoCardComponent.html":{}}}],["decorators",{"_index":396,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["default",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/VideoHttpService.html":{},"components/VideoPlayerComponent.html":{},"injectables/VideoService.html":{},"components/VideosDashboardComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"classes/Thumbnail.html":{},"classes/Video.html":{},"components/VideoCardComponent.html":{},"injectables/VideoHttpService.html":{},"components/VideoPlayerComponent.html":{},"injectables/VideoService.html":{},"components/VideosDashboardComponent.html":{}}}],["dependencies",{"_index":469,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["deployed",{"_index":659,"title":{},"body":{"index.html":{}}}],["description",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"interfaces/MockVideo.html":{},"classes/Thumbnail.html":{},"classes/Video.html":{},"components/VideoCardComponent.html":{},"injectables/VideoHttpService.html":{},"components/VideoPlayerComponent.html":{},"injectables/VideoService.html":{},"components/VideosDashboardComponent.html":{},"interfaces/YouTubeVideo.html":{},"miscellaneous/functions.html":{}}}],["designed",{"_index":510,"title":{},"body":{"index.html":{}}}],["dev",{"_index":524,"title":{},"body":{"index.html":{}}}],["developer",{"_index":549,"title":{},"body":{"index.html":{}}}],["development",{"_index":515,"title":{},"body":{"index.html":{}}}],["different",{"_index":211,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["directive",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/VideoCardComponent.html":{},"components/VideoPlayerComponent.html":{},"components/VideosDashboardComponent.html":{}}}],["directives",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/VideoCardComponent.html":{},"components/VideoPlayerComponent.html":{},"components/VideosDashboardComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":535,"title":{},"body":{"index.html":{}}}],["directory",{"_index":540,"title":{},"body":{"index.html":{}}}],["displayed",{"_index":189,"title":{},"body":{"components/VideoCardComponent.html":{}}}],["displaying",{"_index":362,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["dist",{"_index":539,"title":{},"body":{"index.html":{}}}],["docs",{"_index":662,"title":{},"body":{"index.html":{}}}],["docs:buildhelp",{"_index":664,"title":{},"body":{"index.html":{}}}],["document.getelementsbyclassname('video",{"_index":413,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["documentation",{"_index":437,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/VideoCardComponent.html":{},"components/VideoPlayerComponent.html":{},"components/VideosDashboardComponent.html":{}}}],["dynamic",{"_index":479,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":428,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["ecosystem",{"_index":544,"title":{},"body":{"index.html":{}}}],["education",{"_index":238,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["element",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/VideoCardComponent.html":{},"components/VideoPlayerComponent.html":{},"components/VideosDashboardComponent.html":{}}}],["enforces",{"_index":584,"title":{},"body":{"index.html":{}}}],["enforcing",{"_index":563,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":571,"title":{},"body":{"index.html":{}}}],["enumerations",{"_index":491,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/enums",{"_index":116,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{}}}],["environment",{"_index":250,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["environment.mockvideoapiurl",{"_index":303,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["environment.videosource",{"_index":261,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["environment.youtubeapikey",{"_index":279,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["environment.youtubeapiurl",{"_index":271,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["environments/environment",{"_index":251,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["error",{"_index":424,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["eslint",{"_index":560,"title":{},"body":{"index.html":{}}}],["eslint.config.mjs",{"_index":562,"title":{},"body":{"index.html":{}}}],["even",{"_index":429,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["eventcoalescing",{"_index":682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["events",{"_index":381,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["example",{"_index":634,"title":{},"body":{"index.html":{}}}],["execute",{"_index":631,"title":{},"body":{"index.html":{}}}],["executes",{"_index":603,"title":{},"body":{"index.html":{}}}],["explore",{"_index":511,"title":{},"body":{"index.html":{}}}],["export",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/MockVideo.html":{},"classes/Thumbnail.html":{},"classes/Video.html":{},"components/VideoCardComponent.html":{},"injectables/VideoHttpService.html":{},"components/VideoPlayerComponent.html":{},"injectables/VideoService.html":{},"components/VideosDashboardComponent.html":{},"interfaces/YouTubeVideo.html":{}}}],["express",{"_index":483,"title":{},"body":{"dependencies.html":{}}}],["extracted",{"_index":340,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["fail",{"_index":612,"title":{},"body":{"index.html":{}}}],["false",{"_index":399,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["fetch",{"_index":241,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["fetches",{"_index":227,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["fetching",{"_index":210,"title":{},"body":{"injectables/VideoHttpService.html":{},"components/VideosDashboardComponent.html":{}}}],["fetchmockapivideos",{"_index":214,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["fetchvideos",{"_index":215,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["fetchyoutubevideos",{"_index":216,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["fetchyoutubevideos(query",{"_index":233,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/MockVideo.html":{},"classes/Thumbnail.html":{},"classes/Video.html":{},"components/VideoCardComponent.html":{},"injectables/VideoHttpService.html":{},"components/VideoPlayerComponent.html":{},"injectables/VideoService.html":{},"components/VideosDashboardComponent.html":{},"interfaces/YouTubeVideo.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":530,"title":{},"body":{"index.html":{}}}],["format",{"_index":593,"title":{},"body":{"index.html":{}}}],["formats",{"_index":580,"title":{},"body":{"index.html":{}}}],["formatter",{"_index":616,"title":{},"body":{"index.html":{}}}],["formatting",{"_index":650,"title":{},"body":{"index.html":{}}}],["frontend",{"_index":505,"title":{},"body":{"index.html":{}}}],["function",{"_index":455,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":496,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["generate",{"_index":533,"title":{},"body":{"index.html":{}}}],["generated",{"_index":518,"title":{},"body":{"index.html":{}}}],["generates",{"_index":643,"title":{},"body":{"index.html":{}}}],["generating",{"_index":624,"title":{},"body":{"index.html":{}}}],["get(url",{"_index":283,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["getauthor",{"_index":167,"title":{},"body":{"classes/Video.html":{}}}],["getdescription",{"_index":161,"title":{},"body":{"classes/Video.html":{}}}],["getheight",{"_index":111,"title":{},"body":{"classes/Thumbnail.html":{}}}],["getid",{"_index":157,"title":{},"body":{"classes/Video.html":{}}}],["gets",{"_index":109,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{}}}],["getthumbnail",{"_index":163,"title":{},"body":{"classes/Video.html":{}}}],["getting",{"_index":502,"title":{"index.html":{}},"body":{}}],["gettitle",{"_index":159,"title":{},"body":{"classes/Video.html":{}}}],["getuploaddate",{"_index":169,"title":{},"body":{"classes/Video.html":{}}}],["geturl",{"_index":107,"title":{},"body":{"classes/Thumbnail.html":{}}}],["getvisibility",{"_index":165,"title":{},"body":{"classes/Video.html":{}}}],["getwidth",{"_index":113,"title":{},"body":{"classes/Thumbnail.html":{}}}],["git",{"_index":582,"title":{},"body":{"index.html":{}}}],["github",{"_index":660,"title":{},"body":{"index.html":{}}}],["goback",{"_index":320,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["gohome",{"_index":321,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["handle",{"_index":335,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["headless",{"_index":639,"title":{},"body":{"index.html":{}}}],["height",{"_index":93,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{}}}],["helpor",{"_index":665,"title":{},"body":{"index.html":{}}}],["high",{"_index":553,"title":{},"body":{"index.html":{}}}],["history",{"_index":326,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["home",{"_index":328,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["hook",{"_index":391,"title":{},"body":{"components/VideosDashboardComponent.html":{},"index.html":{}}}],["hooks",{"_index":583,"title":{},"body":{"index.html":{}}}],["host",{"_index":377,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["hostlistener",{"_index":407,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["hostlistener('window:scroll",{"_index":397,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["hostlisteners",{"_index":371,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["html",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/VideoCardComponent.html":{},"components/VideoPlayerComponent.html":{},"components/VideosDashboardComponent.html":{},"index.html":{}}}],["http",{"_index":220,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["http.service",{"_index":409,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["http.service.ts",{"_index":208,"title":{},"body":{"injectables/VideoHttpService.html":{},"coverage.html":{}}}],["http.service.ts:102",{"_index":226,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["http.service.ts:29",{"_index":219,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["http.service.ts:41",{"_index":231,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["http.service.ts:64",{"_index":235,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["http://localhost:4200",{"_index":526,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":218,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["httpinterceptorfn",{"_index":688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpparams",{"_index":245,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["husky",{"_index":581,"title":{},"body":{"index.html":{}}}],["id",{"_index":74,"title":{},"body":{"interfaces/MockVideo.html":{},"classes/Thumbnail.html":{},"classes/Video.html":{},"injectables/VideoHttpService.html":{},"components/VideoPlayerComponent.html":{}}}],["identifier",{"_index":79,"title":{},"body":{"interfaces/MockVideo.html":{},"classes/Thumbnail.html":{},"classes/Video.html":{},"interfaces/YouTubeVideo.html":{},"coverage.html":{}}}],["idx",{"_index":427,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["ignores",{"_index":646,"title":{},"body":{"index.html":{}}}],["image",{"_index":81,"title":{},"body":{"interfaces/MockVideo.html":{},"classes/Thumbnail.html":{},"classes/Video.html":{},"interfaces/YouTubeVideo.html":{}}}],["implements",{"_index":363,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["import",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Thumbnail.html":{},"classes/Video.html":{},"components/VideoCardComponent.html":{},"injectables/VideoHttpService.html":{},"components/VideoPlayerComponent.html":{},"injectables/VideoService.html":{},"components/VideosDashboardComponent.html":{},"interfaces/YouTubeVideo.html":{}}}],["imports",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/VideoCardComponent.html":{},"components/VideoPlayerComponent.html":{},"components/VideosDashboardComponent.html":{}}}],["improved",{"_index":558,"title":{},"body":{"index.html":{}}}],["improving",{"_index":615,"title":{},"body":{"index.html":{}}}],["includes",{"_index":565,"title":{},"body":{"index.html":{}}}],["index",{"_index":23,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interfaces/MockVideo.html":{},"classes/Thumbnail.html":{},"classes/Video.html":{},"components/VideoCardComponent.html":{},"injectables/VideoHttpService.html":{},"components/VideoPlayerComponent.html":{},"injectables/VideoService.html":{},"components/VideosDashboardComponent.html":{},"interfaces/YouTubeVideo.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicates",{"_index":401,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/MockVideo.html":{},"classes/Thumbnail.html":{},"classes/Video.html":{},"components/VideoCardComponent.html":{},"injectables/VideoHttpService.html":{},"components/VideoPlayerComponent.html":{},"injectables/VideoService.html":{},"components/VideosDashboardComponent.html":{},"interfaces/YouTubeVideo.html":{}}}],["initialized",{"_index":394,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["initializes",{"_index":357,"title":{},"body":{"injectables/VideoService.html":{},"components/VideosDashboardComponent.html":{}}}],["inject",{"_index":342,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["inject(activatedroute).snapshot.parammap.get('id",{"_index":337,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["inject(location",{"_index":330,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["inject(router",{"_index":333,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["injectable",{"_index":60,"title":{"injectables/AuthService.html":{},"injectables/VideoHttpService.html":{},"injectables/VideoService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/VideoHttpService.html":{},"injectables/VideoService.html":{},"coverage.html":{}}}],["injectables",{"_index":62,"title":{},"body":{"injectables/AuthService.html":{},"injectables/VideoHttpService.html":{},"injectables/VideoService.html":{},"overview.html":{}}}],["input",{"_index":196,"title":{},"body":{"components/VideoCardComponent.html":{}}}],["inputs",{"_index":183,"title":{},"body":{"components/VideoCardComponent.html":{}}}],["instance",{"_index":99,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{}}}],["integrated",{"_index":617,"title":{},"body":{"index.html":{}}}],["integrates",{"_index":545,"title":{},"body":{"index.html":{}}}],["interact",{"_index":332,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["interface",{"_index":65,"title":{"interfaces/MockVideo.html":{},"interfaces/YouTubeVideo.html":{}},"body":{"interfaces/MockVideo.html":{},"interfaces/YouTubeVideo.html":{},"coverage.html":{}}}],["interfaces",{"_index":67,"title":{},"body":{"interfaces/MockVideo.html":{},"interfaces/YouTubeVideo.html":{},"overview.html":{}}}],["isvisible",{"_index":419,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["item",{"_index":288,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["item.author",{"_index":310,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["item.description",{"_index":308,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["item.id",{"_index":306,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["item.id.videoid",{"_index":290,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["item.snippet.channeltitle",{"_index":300,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["item.snippet.description",{"_index":294,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["item.snippet.publishtime",{"_index":302,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["item.snippet.thumbnails.high",{"_index":296,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["item.snippet.title",{"_index":292,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["item.thumbnail",{"_index":309,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["item.title",{"_index":307,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["item.uploaddate",{"_index":311,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["karma",{"_index":569,"title":{},"body":{"index.html":{}}}],["karma.conf.js",{"_index":570,"title":{},"body":{"index.html":{}}}],["lastvideoelement",{"_index":414,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["lastvideoelement.getboundingclientrect",{"_index":418,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["latest",{"_index":551,"title":{},"body":{"index.html":{}}}],["launches",{"_index":636,"title":{},"body":{"index.html":{}}}],["lcov",{"_index":578,"title":{},"body":{"index.html":{}}}],["learning",{"_index":506,"title":{},"body":{"index.html":{}}}],["legend",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/VideoCardComponent.html":{},"components/VideoPlayerComponent.html":{},"components/VideosDashboardComponent.html":{}}}],["lifecycle",{"_index":390,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["lines",{"_index":576,"title":{},"body":{"index.html":{}}}],["lint",{"_index":600,"title":{},"body":{"index.html":{}}}],["linter",{"_index":561,"title":{},"body":{"index.html":{}}}],["linting",{"_index":614,"title":{},"body":{"index.html":{}}}],["lintlinting",{"_index":645,"title":{},"body":{"index.html":{}}}],["lintstagedrc",{"_index":648,"title":{},"body":{"index.html":{}}}],["list",{"_index":355,"title":{},"body":{"injectables/VideoService.html":{},"components/VideosDashboardComponent.html":{}}}],["listener",{"_index":378,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["lite",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["live",{"_index":625,"title":{},"body":{"index.html":{}}}],["loaded",{"_index":405,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["loading",{"_index":395,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["loadingvideos",{"_index":367,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["loads",{"_index":382,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["loadvideos",{"_index":368,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["locally",{"_index":663,"title":{},"body":{"index.html":{}}}],["location",{"_index":319,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["maintain",{"_index":620,"title":{},"body":{"index.html":{}}}],["making",{"_index":223,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["managing",{"_index":350,"title":{},"body":{"injectables/VideoService.html":{},"components/VideosDashboardComponent.html":{}}}],["map",{"_index":247,"title":{},"body":{"injectables/VideoHttpService.html":{},"miscellaneous/functions.html":{}}}],["map((res",{"_index":264,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["mapmockvideotovideo",{"_index":257,"title":{},"body":{"injectables/VideoHttpService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mapmockvideotovideo(item",{"_index":269,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["mapmockvideotovideo(mockvideo",{"_index":498,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mapped",{"_index":500,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mapper",{"_index":260,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["mapper.ts",{"_index":454,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["maps",{"_index":499,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mapyoutubevideotovideo",{"_index":258,"title":{},"body":{"injectables/VideoHttpService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mapyoutubevideotovideo(item",{"_index":266,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["mapyoutubevideotovideo(youtubevideo",{"_index":501,"title":{},"body":{"miscellaneous/functions.html":{}}}],["matching",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/MockVideo.html":{},"classes/Thumbnail.html":{},"classes/Video.html":{},"components/VideoCardComponent.html":{},"injectables/VideoHttpService.html":{},"components/VideoPlayerComponent.html":{},"injectables/VideoService.html":{},"components/VideosDashboardComponent.html":{},"interfaces/YouTubeVideo.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":652,"title":{},"body":{"index.html":{}}}],["messages",{"_index":594,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/VideoCardComponent.html":{},"components/VideoPlayerComponent.html":{},"components/VideosDashboardComponent.html":{}}}],["methods",{"_index":181,"title":{},"body":{"components/VideoCardComponent.html":{},"injectables/VideoHttpService.html":{},"components/VideoPlayerComponent.html":{},"components/VideosDashboardComponent.html":{}}}],["minimum",{"_index":572,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":490,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mock",{"_index":71,"title":{},"body":{"interfaces/MockVideo.html":{},"injectables/VideoHttpService.html":{}}}],["mock_api",{"_index":494,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mockapi",{"_index":495,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mockvideo",{"_index":66,"title":{"interfaces/MockVideo.html":{}},"body":{"interfaces/MockVideo.html":{},"injectables/VideoHttpService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mode",{"_index":632,"title":{},"body":{"index.html":{}}}],["modern",{"_index":514,"title":{},"body":{"index.html":{}}}],["modules",{"_index":667,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":383,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["msg",{"_index":591,"title":{},"body":{"index.html":{}}}],["name",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"classes/Thumbnail.html":{},"classes/Video.html":{},"components/VideoCardComponent.html":{},"injectables/VideoHttpService.html":{},"components/VideoPlayerComponent.html":{},"components/VideosDashboardComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navigable",{"_index":626,"title":{},"body":{"index.html":{}}}],["navigate",{"_index":525,"title":{},"body":{"index.html":{}}}],["navigates",{"_index":191,"title":{},"body":{"components/VideoCardComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["navigation",{"_index":188,"title":{},"body":{"components/VideoCardComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["new",{"_index":132,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{},"injectables/VideoHttpService.html":{},"injectables/VideoService.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":244,"title":{},"body":{"injectables/VideoHttpService.html":{},"miscellaneous/variables.html":{}}}],["next(req",{"_index":690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nextpagetoken",{"_index":213,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["ng",{"_index":522,"title":{},"body":{"index.html":{}}}],["ngoninit",{"_index":369,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["npm",{"_index":635,"title":{},"body":{"index.html":{}}}],["number",{"_index":104,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{},"injectables/VideoHttpService.html":{}}}],["object",{"_index":102,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{},"components/VideoCardComponent.html":{},"miscellaneous/functions.html":{}}}],["objects",{"_index":230,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["observable",{"_index":228,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["oninit",{"_index":364,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["onscroll",{"_index":370,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["opens",{"_index":638,"title":{},"body":{"index.html":{}}}],["openvideo",{"_index":182,"title":{},"body":{"components/VideoCardComponent.html":{}}}],["optimizes",{"_index":613,"title":{},"body":{"index.html":{}}}],["optional",{"_index":72,"title":{},"body":{"interfaces/MockVideo.html":{},"classes/Thumbnail.html":{},"classes/Video.html":{},"components/VideoCardComponent.html":{},"injectables/VideoHttpService.html":{},"components/VideosDashboardComponent.html":{},"interfaces/YouTubeVideo.html":{},"miscellaneous/functions.html":{}}}],["overview",{"_index":668,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":468,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":193,"title":{},"body":{"components/VideoCardComponent.html":{},"injectables/VideoHttpService.html":{},"components/VideoPlayerComponent.html":{},"components/VideosDashboardComponent.html":{},"index.html":{}}}],["pages",{"_index":661,"title":{},"body":{"index.html":{}}}],["param",{"_index":124,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{},"components/VideoCardComponent.html":{},"injectables/VideoHttpService.html":{}}}],["parameters",{"_index":100,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{},"components/VideoCardComponent.html":{},"injectables/VideoHttpService.html":{},"components/VideoPlayerComponent.html":{},"components/VideosDashboardComponent.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":272,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["performance",{"_index":554,"title":{},"body":{"index.html":{}}}],["pipe",{"_index":286,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["pipe(tap((res",{"_index":284,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["played",{"_index":339,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["player",{"_index":315,"title":{},"body":{"components/VideoPlayerComponent.html":{},"dependencies.html":{}}}],["player'},{'name",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/VideoCardComponent.html":{},"components/VideoPlayerComponent.html":{},"components/VideosDashboardComponent.html":{}}}],["player.component.html",{"_index":317,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["player.component.scss",{"_index":318,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["player.component.ts",{"_index":313,"title":{},"body":{"components/VideoPlayerComponent.html":{},"coverage.html":{}}}],["player.component.ts:21",{"_index":331,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["player.component.ts:26",{"_index":334,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["player.component.ts:31",{"_index":338,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["player.component.ts:36",{"_index":322,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["player.component.ts:43",{"_index":327,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["player/video",{"_index":312,"title":{},"body":{"components/VideoPlayerComponent.html":{},"coverage.html":{}}}],["playing",{"_index":314,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["posted",{"_index":435,"title":{},"body":{"interfaces/YouTubeVideo.html":{}}}],["powered",{"_index":543,"title":{},"body":{"index.html":{}}}],["practices",{"_index":513,"title":{},"body":{"index.html":{}}}],["pre",{"_index":596,"title":{},"body":{"index.html":{}}}],["prettier",{"_index":598,"title":{},"body":{"index.html":{}}}],["prettierignore",{"_index":619,"title":{},"body":{"index.html":{}}}],["prettierrc",{"_index":618,"title":{},"body":{"index.html":{}}}],["previous",{"_index":324,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["private",{"_index":87,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{},"components/VideoPlayerComponent.html":{},"components/VideosDashboardComponent.html":{},"miscellaneous/enumerations.html":{}}}],["project",{"_index":507,"title":{},"body":{"index.html":{}}}],["properties",{"_index":24,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"interfaces/MockVideo.html":{},"classes/Thumbnail.html":{},"classes/Video.html":{},"injectables/VideoHttpService.html":{},"components/VideoPlayerComponent.html":{},"injectables/VideoService.html":{},"components/VideosDashboardComponent.html":{},"interfaces/YouTubeVideo.html":{},"miscellaneous/functions.html":{},"properties.html":{}}}],["provideanimationsasync",{"_index":685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideclienthydration",{"_index":684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":64,"title":{},"body":{"injectables/AuthService.html":{},"injectables/VideoHttpService.html":{},"injectables/VideoService.html":{}}}],["providehttpclient(withfetch",{"_index":686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provides",{"_index":351,"title":{},"body":{"injectables/VideoService.html":{}}}],["provideserverrendering",{"_index":693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":140,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{},"injectables/VideoHttpService.html":{},"injectables/VideoService.html":{},"components/VideosDashboardComponent.html":{},"miscellaneous/enumerations.html":{}}}],["push",{"_index":602,"title":{},"body":{"index.html":{}}}],["pushes",{"_index":589,"title":{},"body":{"index.html":{}}}],["pushing",{"_index":607,"title":{},"body":{"index.html":{}}}],["quality",{"_index":547,"title":{},"body":{"index.html":{}}}],["query",{"_index":237,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["readonly",{"_index":88,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{},"injectables/VideoHttpService.html":{}}}],["rect",{"_index":417,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["rect.bottom",{"_index":420,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["refer",{"_index":666,"title":{},"body":{"index.html":{}}}],["reload",{"_index":528,"title":{},"body":{"index.html":{}}}],["report",{"_index":633,"title":{},"body":{"index.html":{}}}],["reports",{"_index":577,"title":{},"body":{"index.html":{}}}],["repository",{"_index":608,"title":{},"body":{"index.html":{}}}],["representing",{"_index":70,"title":{},"body":{"interfaces/MockVideo.html":{},"classes/Thumbnail.html":{},"classes/Video.html":{},"components/VideoCardComponent.html":{},"interfaces/YouTubeVideo.html":{}}}],["req",{"_index":689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requests",{"_index":225,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["res.items.map",{"_index":287,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["res.map",{"_index":305,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["res.map((item",{"_index":265,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["res.nextpagetoken",{"_index":285,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["results",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/MockVideo.html":{},"classes/Thumbnail.html":{},"classes/Video.html":{},"components/VideoCardComponent.html":{},"injectables/VideoHttpService.html":{},"components/VideoPlayerComponent.html":{},"injectables/VideoService.html":{},"components/VideosDashboardComponent.html":{},"interfaces/YouTubeVideo.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":141,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{},"injectables/VideoHttpService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":110,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{},"components/VideoCardComponent.html":{},"injectables/VideoHttpService.html":{},"components/VideoPlayerComponent.html":{},"components/VideosDashboardComponent.html":{},"miscellaneous/functions.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/VideoHttpService.html":{},"injectables/VideoService.html":{}}}],["root'},{'name",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/VideoCardComponent.html":{},"components/VideoPlayerComponent.html":{},"components/VideosDashboardComponent.html":{}}}],["route",{"_index":341,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["router",{"_index":185,"title":{},"body":{"components/VideoCardComponent.html":{},"components/VideoPlayerComponent.html":{}}}],["routeroutlet",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["rules",{"_index":568,"title":{},"body":{"index.html":{}}}],["run",{"_index":521,"title":{},"body":{"index.html":{}}}],["running",{"_index":630,"title":{},"body":{"index.html":{}}}],["runs",{"_index":597,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":249,"title":{},"body":{"injectables/VideoHttpService.html":{},"dependencies.html":{}}}],["saved",{"_index":657,"title":{},"body":{"index.html":{}}}],["scaffolding",{"_index":532,"title":{},"body":{"index.html":{}}}],["scalable",{"_index":555,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":380,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["scrolls",{"_index":385,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["search",{"_index":239,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/VideoCardComponent.html":{},"components/VideoPlayerComponent.html":{},"components/VideosDashboardComponent.html":{}}}],["serve",{"_index":523,"title":{},"body":{"index.html":{}}}],["servenavigate",{"_index":655,"title":{},"body":{"index.html":{}}}],["server",{"_index":375,"title":{},"body":{"components/VideosDashboardComponent.html":{},"dependencies.html":{},"index.html":{}}}],["serverconfig",{"_index":446,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":209,"title":{},"body":{"injectables/VideoHttpService.html":{},"components/VideoPlayerComponent.html":{},"injectables/VideoService.html":{},"components/VideosDashboardComponent.html":{}}}],["services",{"_index":629,"title":{},"body":{"index.html":{}}}],["services/video",{"_index":408,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["services/video.service",{"_index":411,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["set('key",{"_index":278,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["set('maxresults",{"_index":276,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["set('pagetoken",{"_index":280,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["set('part",{"_index":273,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["set('q",{"_index":277,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["set('type",{"_index":275,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["several",{"_index":546,"title":{},"body":{"index.html":{}}}],["shared/enums/enums",{"_index":253,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["shared/models/mock",{"_index":254,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["shared/models/video.model",{"_index":197,"title":{},"body":{"components/VideoCardComponent.html":{},"injectables/VideoHttpService.html":{},"injectables/VideoService.html":{},"components/VideosDashboardComponent.html":{}}}],["shared/models/youtube",{"_index":256,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["signal",{"_index":352,"title":{},"body":{"injectables/VideoService.html":{}}}],["single",{"_index":174,"title":{},"body":{"components/VideoCardComponent.html":{},"index.html":{}}}],["site",{"_index":628,"title":{},"body":{"index.html":{}}}],["snippet",{"_index":274,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/MockVideo.html":{},"classes/Thumbnail.html":{},"classes/Video.html":{},"components/VideoCardComponent.html":{},"injectables/VideoHttpService.html":{},"components/VideoPlayerComponent.html":{},"injectables/VideoService.html":{},"components/VideosDashboardComponent.html":{},"interfaces/YouTubeVideo.html":{},"index.html":{}}}],["sources",{"_index":212,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["specific",{"_index":566,"title":{},"body":{"index.html":{}}}],["src/.../app.config.server.ts",{"_index":678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.guard.ts",{"_index":675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.interceptor.ts",{"_index":676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../enums.ts",{"_index":492,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../main.server.ts",{"_index":677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../video",{"_index":497,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":441,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":447,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/services/auth.guard.ts",{"_index":449,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/services/auth.interceptor.ts",{"_index":451,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/services/auth.service.ts",{"_index":63,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/utils/video",{"_index":453,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/features/videos/components/video",{"_index":171,"title":{},"body":{"components/VideoCardComponent.html":{},"components/VideoPlayerComponent.html":{},"coverage.html":{}}}],["src/app/features/videos/components/videos",{"_index":359,"title":{},"body":{"components/VideosDashboardComponent.html":{},"coverage.html":{}}}],["src/app/features/videos/services/video",{"_index":207,"title":{},"body":{"injectables/VideoHttpService.html":{},"coverage.html":{}}}],["src/app/features/videos/services/video.service.ts",{"_index":349,"title":{},"body":{"injectables/VideoService.html":{},"coverage.html":{}}}],["src/app/features/videos/services/video.service.ts:17",{"_index":356,"title":{},"body":{"injectables/VideoService.html":{}}}],["src/app/shared/enums/enums.ts",{"_index":493,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/shared/models/mock",{"_index":68,"title":{},"body":{"interfaces/MockVideo.html":{},"coverage.html":{}}}],["src/app/shared/models/video.model.ts",{"_index":86,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{},"coverage.html":{}}}],["src/app/shared/models/video.model.ts:10",{"_index":153,"title":{},"body":{"classes/Video.html":{}}}],["src/app/shared/models/video.model.ts:100",{"_index":168,"title":{},"body":{"classes/Video.html":{}}}],["src/app/shared/models/video.model.ts:108",{"_index":170,"title":{},"body":{"classes/Video.html":{}}}],["src/app/shared/models/video.model.ts:120",{"_index":106,"title":{},"body":{"classes/Thumbnail.html":{}}}],["src/app/shared/models/video.model.ts:125",{"_index":105,"title":{},"body":{"classes/Thumbnail.html":{}}}],["src/app/shared/models/video.model.ts:130",{"_index":97,"title":{},"body":{"classes/Thumbnail.html":{}}}],["src/app/shared/models/video.model.ts:146",{"_index":108,"title":{},"body":{"classes/Thumbnail.html":{}}}],["src/app/shared/models/video.model.ts:15",{"_index":155,"title":{},"body":{"classes/Video.html":{}}}],["src/app/shared/models/video.model.ts:154",{"_index":112,"title":{},"body":{"classes/Thumbnail.html":{}}}],["src/app/shared/models/video.model.ts:162",{"_index":114,"title":{},"body":{"classes/Thumbnail.html":{}}}],["src/app/shared/models/video.model.ts:20",{"_index":152,"title":{},"body":{"classes/Video.html":{}}}],["src/app/shared/models/video.model.ts:25",{"_index":154,"title":{},"body":{"classes/Video.html":{}}}],["src/app/shared/models/video.model.ts:30",{"_index":156,"title":{},"body":{"classes/Video.html":{}}}],["src/app/shared/models/video.model.ts:35",{"_index":151,"title":{},"body":{"classes/Video.html":{}}}],["src/app/shared/models/video.model.ts:40",{"_index":150,"title":{},"body":{"classes/Video.html":{}}}],["src/app/shared/models/video.model.ts:60",{"_index":158,"title":{},"body":{"classes/Video.html":{}}}],["src/app/shared/models/video.model.ts:68",{"_index":160,"title":{},"body":{"classes/Video.html":{}}}],["src/app/shared/models/video.model.ts:76",{"_index":162,"title":{},"body":{"classes/Video.html":{}}}],["src/app/shared/models/video.model.ts:84",{"_index":164,"title":{},"body":{"classes/Video.html":{}}}],["src/app/shared/models/video.model.ts:92",{"_index":166,"title":{},"body":{"classes/Video.html":{}}}],["src/app/shared/models/youtube",{"_index":434,"title":{},"body":{"interfaces/YouTubeVideo.html":{},"coverage.html":{}}}],["src/main.server.ts",{"_index":464,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":542,"title":{},"body":{"index.html":{}}}],["staged",{"_index":601,"title":{},"body":{"index.html":{}}}],["standalone",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/VideoCardComponent.html":{},"components/VideoPlayerComponent.html":{},"components/VideosDashboardComponent.html":{},"index.html":{}}}],["started",{"_index":503,"title":{"index.html":{}},"body":{}}],["statements",{"_index":438,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["status",{"_index":84,"title":{},"body":{"interfaces/MockVideo.html":{},"classes/Thumbnail.html":{},"classes/Video.html":{},"interfaces/YouTubeVideo.html":{}}}],["store",{"_index":353,"title":{},"body":{"injectables/VideoService.html":{}}}],["stored",{"_index":538,"title":{},"body":{"index.html":{}}}],["string",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"interfaces/MockVideo.html":{},"classes/Thumbnail.html":{},"classes/Video.html":{},"injectables/VideoHttpService.html":{},"interfaces/YouTubeVideo.html":{}}}],["styleurl",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/VideoCardComponent.html":{},"components/VideoPlayerComponent.html":{},"components/VideosDashboardComponent.html":{}}}],["styling",{"_index":621,"title":{},"body":{"index.html":{}}}],["summary",{"_index":579,"title":{},"body":{"index.html":{}}}],["table",{"_index":467,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":466,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":248,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["tech",{"_index":541,"title":{},"body":{"index.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/VideoCardComponent.html":{},"components/VideoPlayerComponent.html":{},"components/VideosDashboardComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/VideoCardComponent.html":{},"components/VideoPlayerComponent.html":{},"components/VideosDashboardComponent.html":{}}}],["test",{"_index":574,"title":{},"body":{"index.html":{}}}],["test:no",{"_index":640,"title":{},"body":{"index.html":{}}}],["testing",{"_index":516,"title":{},"body":{"index.html":{}}}],["tests",{"_index":605,"title":{},"body":{"index.html":{}}}],["tests/coverage",{"_index":654,"title":{},"body":{"index.html":{}}}],["this._author",{"_index":136,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{}}}],["this._description",{"_index":129,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{}}}],["this._height",{"_index":146,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{}}}],["this._id",{"_index":125,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{}}}],["this._thumbnail",{"_index":131,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{}}}],["this._title",{"_index":127,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{}}}],["this._uploaddate",{"_index":138,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{}}}],["this._url",{"_index":144,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{}}}],["this._visibility",{"_index":134,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{}}}],["this._width",{"_index":148,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{}}}],["this.fetchmockapivideos().pipe",{"_index":268,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["this.fetchyoutubevideos().pipe",{"_index":263,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["this.http",{"_index":282,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["this.http.get(url).pipe",{"_index":304,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["this.loadingvideos",{"_index":423,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["this.location.back",{"_index":345,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["this.nextpagetoken",{"_index":281,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["this.router.navigate(['videos/watch",{"_index":200,"title":{},"body":{"components/VideoCardComponent.html":{}}}],["this.router.navigatebyurl",{"_index":346,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["this.video.id",{"_index":201,"title":{},"body":{"components/VideoCardComponent.html":{}}}],["this.videoservice.videos.update((currentvideos",{"_index":421,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["threshold",{"_index":611,"title":{},"body":{"index.html":{}}}],["thresholds",{"_index":644,"title":{},"body":{"index.html":{}}}],["thumbnail",{"_index":75,"title":{"classes/Thumbnail.html":{}},"body":{"interfaces/MockVideo.html":{},"classes/Thumbnail.html":{},"classes/Video.html":{},"injectables/VideoHttpService.html":{},"interfaces/YouTubeVideo.html":{},"coverage.html":{}}}],["thumbnail(data?.thumbnail",{"_index":133,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{}}}],["title",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"interfaces/MockVideo.html":{},"classes/Thumbnail.html":{},"classes/Video.html":{},"injectables/VideoHttpService.html":{},"interfaces/YouTubeVideo.html":{}}}],["token",{"_index":243,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["tool",{"_index":623,"title":{},"body":{"index.html":{}}}],["tooling",{"_index":517,"title":{},"body":{"index.html":{}}}],["track",{"_index":430,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/VideoCardComponent.html":{},"components/VideoPlayerComponent.html":{},"components/VideosDashboardComponent.html":{}}}],["triggered",{"_index":649,"title":{},"body":{"index.html":{}}}],["true",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/VideoCardComponent.html":{},"components/VideoPlayerComponent.html":{},"components/VideosDashboardComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"interfaces/MockVideo.html":{},"classes/Thumbnail.html":{},"classes/Video.html":{},"components/VideoCardComponent.html":{},"injectables/VideoHttpService.html":{},"components/VideosDashboardComponent.html":{},"interfaces/YouTubeVideo.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":567,"title":{},"body":{"index.html":{}}}],["ui",{"_index":627,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":142,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{},"components/VideosDashboardComponent.html":{}}}],["unique",{"_index":78,"title":{},"body":{"interfaces/MockVideo.html":{},"classes/Thumbnail.html":{},"classes/Video.html":{},"interfaces/YouTubeVideo.html":{}}}],["unit",{"_index":604,"title":{},"body":{"index.html":{}}}],["unnecessary",{"_index":647,"title":{},"body":{"index.html":{}}}],["update",{"_index":354,"title":{},"body":{"injectables/VideoService.html":{}}}],["updated",{"_index":358,"title":{},"body":{"injectables/VideoService.html":{}}}],["updates",{"_index":388,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["upload",{"_index":82,"title":{},"body":{"interfaces/MockVideo.html":{},"classes/Thumbnail.html":{},"classes/Video.html":{}}}],["uploaddate",{"_index":76,"title":{},"body":{"interfaces/MockVideo.html":{},"classes/Thumbnail.html":{},"classes/Video.html":{},"injectables/VideoHttpService.html":{}}}],["url",{"_index":80,"title":{},"body":{"interfaces/MockVideo.html":{},"classes/Thumbnail.html":{},"classes/Video.html":{},"injectables/VideoHttpService.html":{},"components/VideoPlayerComponent.html":{}}}],["use",{"_index":534,"title":{},"body":{"index.html":{}}}],["used",{"_index":222,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["user",{"_index":384,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["uses",{"_index":641,"title":{},"body":{"index.html":{}}}],["using",{"_index":557,"title":{},"body":{"index.html":{}}}],["validates",{"_index":592,"title":{},"body":{"index.html":{}}}],["value",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"injectables/VideoHttpService.html":{},"components/VideoPlayerComponent.html":{},"injectables/VideoService.html":{},"components/VideosDashboardComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/VideoCardComponent.html":{},"components/VideoPlayerComponent.html":{},"components/VideosDashboardComponent.html":{}}}],["variable",{"_index":442,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":673,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":520,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":599,"title":{},"body":{"index.html":{}}}],["video",{"_index":49,"title":{"classes/Video.html":{}},"body":{"components/AppComponent.html":{},"interfaces/MockVideo.html":{},"classes/Thumbnail.html":{},"classes/Video.html":{},"components/VideoCardComponent.html":{},"injectables/VideoHttpService.html":{},"components/VideoPlayerComponent.html":{},"injectables/VideoService.html":{},"components/VideosDashboardComponent.html":{},"interfaces/YouTubeVideo.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["video.author",{"_index":203,"title":{},"body":{"components/VideoCardComponent.html":{}}}],["video.description",{"_index":205,"title":{},"body":{"components/VideoCardComponent.html":{}}}],["video.id",{"_index":431,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["video.model",{"_index":255,"title":{},"body":{"injectables/VideoHttpService.html":{},"interfaces/YouTubeVideo.html":{}}}],["video.model.ts",{"_index":69,"title":{},"body":{"interfaces/MockVideo.html":{},"interfaces/YouTubeVideo.html":{},"coverage.html":{}}}],["video.title",{"_index":202,"title":{},"body":{"components/VideoCardComponent.html":{}}}],["video.uploaddate",{"_index":204,"title":{},"body":{"components/VideoCardComponent.html":{}}}],["videoauthor",{"_index":299,"title":{},"body":{"injectables/VideoHttpService.html":{},"interfaces/YouTubeVideo.html":{}}}],["videocardcomponent",{"_index":48,"title":{"components/VideoCardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/VideoCardComponent.html":{},"components/VideoPlayerComponent.html":{},"components/VideosDashboardComponent.html":{},"coverage.html":{}}}],["videodescription",{"_index":293,"title":{},"body":{"injectables/VideoHttpService.html":{},"interfaces/YouTubeVideo.html":{}}}],["videoelements",{"_index":412,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["videoelements[videoelements.length",{"_index":415,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["videohttpservice",{"_index":206,"title":{"injectables/VideoHttpService.html":{}},"body":{"injectables/VideoHttpService.html":{},"components/VideosDashboardComponent.html":{},"coverage.html":{}}}],["videoid",{"_index":289,"title":{},"body":{"injectables/VideoHttpService.html":{},"components/VideoPlayerComponent.html":{},"interfaces/YouTubeVideo.html":{}}}],["videoplayercomponent",{"_index":51,"title":{"components/VideoPlayerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/VideoCardComponent.html":{},"components/VideoPlayerComponent.html":{},"components/VideosDashboardComponent.html":{},"coverage.html":{}}}],["videopostedon",{"_index":301,"title":{},"body":{"injectables/VideoHttpService.html":{},"interfaces/YouTubeVideo.html":{}}}],["videos",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/VideoCardComponent.html":{},"injectables/VideoHttpService.html":{},"components/VideoPlayerComponent.html":{},"injectables/VideoService.html":{},"components/VideosDashboardComponent.html":{}}}],["videosdashboardcomponent",{"_index":53,"title":{"components/VideosDashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/VideoCardComponent.html":{},"components/VideoPlayerComponent.html":{},"components/VideosDashboardComponent.html":{},"coverage.html":{}}}],["videoservice",{"_index":348,"title":{"injectables/VideoService.html":{}},"body":{"injectables/VideoService.html":{},"components/VideosDashboardComponent.html":{},"coverage.html":{}}}],["videoservice.videos",{"_index":426,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["videosourceenum",{"_index":252,"title":{},"body":{"injectables/VideoHttpService.html":{},"miscellaneous/enumerations.html":{}}}],["videosourceenum.mock_api",{"_index":267,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["videosourceenum.youtube",{"_index":262,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["videothumbnail",{"_index":295,"title":{},"body":{"injectables/VideoHttpService.html":{},"interfaces/YouTubeVideo.html":{}}}],["videotitle",{"_index":291,"title":{},"body":{"injectables/VideoHttpService.html":{},"interfaces/YouTubeVideo.html":{}}}],["videovisibility",{"_index":297,"title":{},"body":{"injectables/VideoHttpService.html":{},"interfaces/YouTubeVideo.html":{}}}],["videovisibilityenum",{"_index":115,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{},"injectables/VideoHttpService.html":{},"miscellaneous/enumerations.html":{}}}],["videovisibilityenum.public",{"_index":298,"title":{},"body":{"injectables/VideoHttpService.html":{}}}],["visibility",{"_index":77,"title":{},"body":{"interfaces/MockVideo.html":{},"classes/Thumbnail.html":{},"classes/Video.html":{},"injectables/VideoHttpService.html":{},"interfaces/YouTubeVideo.html":{}}}],["void",{"_index":194,"title":{},"body":{"components/VideoCardComponent.html":{},"components/VideoPlayerComponent.html":{},"components/VideosDashboardComponent.html":{}}}],["watch",{"_index":192,"title":{},"body":{"components/VideoCardComponent.html":{},"index.html":{}}}],["whether",{"_index":402,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["width",{"_index":94,"title":{},"body":{"classes/Thumbnail.html":{},"classes/Video.html":{}}}],["window",{"_index":379,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["window:scroll",{"_index":372,"title":{},"body":{"components/VideosDashboardComponent.html":{}}}],["within",{"_index":336,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["youtube",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/VideoHttpService.html":{},"components/VideoPlayerComponent.html":{},"interfaces/YouTubeVideo.html":{},"miscellaneous/enumerations.html":{}}}],["youtubelite",{"_index":504,"title":{},"body":{"index.html":{}}}],["youtubeplayer",{"_index":316,"title":{},"body":{"components/VideoPlayerComponent.html":{}}}],["youtubevideo",{"_index":242,"title":{"interfaces/YouTubeVideo.html":{}},"body":{"injectables/VideoHttpService.html":{},"interfaces/YouTubeVideo.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["zone.js",{"_index":488,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        This is the AppComponent\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'youtube-lite'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n/**\n * This is the AppComponent\n */\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\nexport class AppComponent {\n  title = 'youtube-lite';\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'VideoCardComponent', 'selector': 'app-video-card'},{'name': 'VideoPlayerComponent', 'selector': 'app-video-player'},{'name': 'VideosDashboardComponent', 'selector': 'app-videos-dashboard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/auth.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MockVideo.html":{"url":"interfaces/MockVideo.html","title":"interface - MockVideo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MockVideo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/mock-video.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a mock video.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            author\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            thumbnail\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            uploadDate\n                                        \n                                \n                                \n                                        \n                                            visibility\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        author\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        author:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The author of the mock video (optional).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The description of the mock video (optional).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The unique identifier for the mock video.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbnail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thumbnail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The URL of the thumbnail image for the mock video.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the mock video.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uploadDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uploadDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The upload date of the mock video (optional).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visibility\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        visibility:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The visibility status of the mock video.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface MockVideo {\n  /**\n   * The unique identifier for the mock video.\n   */\n  id: string;\n\n  /**\n   * The title of the mock video.\n   */\n  title: string;\n\n  /**\n   * The description of the mock video (optional).\n   */\n  description?: string;\n\n  /**\n   * The URL of the thumbnail image for the mock video.\n   */\n  thumbnail: string;\n\n  /**\n   * The visibility status of the mock video.\n   */\n  visibility: string;\n\n  /**\n   * The author of the mock video (optional).\n   */\n  author?: string;\n\n  /**\n   * The upload date of the mock video (optional).\n   */\n  uploadDate?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Thumbnail.html":{"url":"classes/Thumbnail.html","title":"class - Thumbnail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Thumbnail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/video.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Class representing a video thumbnail.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _height\n                            \n                            \n                                    Private\n                                    Readonly\n                                _url\n                            \n                            \n                                    Private\n                                    Readonly\n                                _width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    url\n                                \n                                \n                                    height\n                                \n                                \n                                    width\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/models/video.model.ts:130\n                            \n                        \n\n                \n                    \n                            Constructs a Thumbnail instance.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The data object containing thumbnail properties.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/models/video.model.ts:125\n                        \n                    \n\n            \n                \n                    The height of the thumbnail image.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/models/video.model.ts:120\n                        \n                    \n\n            \n                \n                    The URL of the thumbnail image.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/models/video.model.ts:130\n                        \n                    \n\n            \n                \n                    The width of the thumbnail image.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        url\n                    \n                \n\n                \n                    \n                        geturl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/models/video.model.ts:146\n                                \n                            \n                    \n                        \n                                Gets the thumbnail URL.\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n\n                \n                    \n                        getheight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/models/video.model.ts:154\n                                \n                            \n                    \n                        \n                                Gets the thumbnail height.\n\n\n                                \n                                \n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n\n                \n                    \n                        getwidth()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/models/video.model.ts:162\n                                \n                            \n                    \n                        \n                                Gets the thumbnail width.\n\n\n                                \n                                \n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { VideoVisibilityEnum } from '../enums/enums';\n\n/**\n * Class representing a video.\n */\nexport class Video {\n  /**\n   * The unique identifier for the video.\n   */\n  private readonly _id: string;\n\n  /**\n   * The title of the video.\n   */\n  private readonly _title: string;\n\n  /**\n   * The description of the video (optional).\n   */\n  private readonly _description?: string;\n\n  /**\n   * The thumbnail image of the video.\n   */\n  private readonly _thumbnail: Thumbnail;\n\n  /**\n   * The visibility status of the video.\n   */\n  private readonly _visibility: VideoVisibilityEnum;\n\n  /**\n   * The author of the video.\n   */\n  private readonly _author: string;\n\n  /**\n   * The upload date of the video.\n   */\n  private readonly _uploadDate: string;\n\n  /**\n   * Constructs a Video instance.\n   * @param data The data object containing video properties.\n   */\n  constructor(data: any) {\n    this._id = data?.id;\n    this._title = data?.title;\n    this._description = data?.description;\n    this._thumbnail = new Thumbnail(data?.thumbnail);\n    this._visibility = data?.visibility;\n    this._author = data?.author;\n    this._uploadDate = data.uploadDate;\n  }\n\n  /**\n   * Gets the video ID.\n   * @returns The video ID.\n   */\n  public get id(): string {\n    return this._id;\n  }\n\n  /**\n   * Gets the video title.\n   * @returns The video title.\n   */\n  public get title(): string {\n    return this._title;\n  }\n\n  /**\n   * Gets the video description.\n   * @returns The video description or undefined if not available.\n   */\n  public get description(): string | undefined {\n    return this._description;\n  }\n\n  /**\n   * Gets the video thumbnail.\n   * @returns The video thumbnail.\n   */\n  public get thumbnail(): Thumbnail {\n    return this._thumbnail;\n  }\n\n  /**\n   * Gets the video visibility status.\n   * @returns The video visibility status.\n   */\n  public get visibility(): VideoVisibilityEnum {\n    return this._visibility;\n  }\n\n  /**\n   * Gets the video author.\n   * @returns The video author.\n   */\n  public get author(): string {\n    return this._author;\n  }\n\n  /**\n   * Gets the video upload date.\n   * @returns The video upload date.\n   */\n  public get uploadDate(): string {\n    return this._uploadDate;\n  }\n}\n\n/**\n * Class representing a video thumbnail.\n */\nexport class Thumbnail {\n  /**\n   * The URL of the thumbnail image.\n   */\n  private readonly _url: string;\n\n  /**\n   * The height of the thumbnail image.\n   */\n  private readonly _height: number;\n\n  /**\n   * The width of the thumbnail image.\n   */\n  private readonly _width: number;\n\n  /**\n   * Constructs a Thumbnail instance.\n   * @param data The data object containing thumbnail properties.\n   */\n  constructor(data: any) {\n    this._url = data?.url;\n    this._height = data?.height;\n    this._width = data?.width;\n  }\n\n  /**\n   * Gets the thumbnail URL.\n   * @returns The thumbnail URL.\n   */\n  get url(): string {\n    return this._url;\n  }\n\n  /**\n   * Gets the thumbnail height.\n   * @returns The thumbnail height.\n   */\n  get height(): number {\n    return this._height;\n  }\n\n  /**\n   * Gets the thumbnail width.\n   * @returns The thumbnail width.\n   */\n  get width(): number {\n    return this._width;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Video.html":{"url":"classes/Video.html","title":"class - Video","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Video\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/video.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Class representing a video.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _author\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _description\n                            \n                            \n                                    Private\n                                    Readonly\n                                _id\n                            \n                            \n                                    Private\n                                    Readonly\n                                _thumbnail\n                            \n                            \n                                    Private\n                                    Readonly\n                                _title\n                            \n                            \n                                    Private\n                                    Readonly\n                                _uploadDate\n                            \n                            \n                                    Private\n                                    Readonly\n                                _visibility\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    title\n                                \n                                \n                                    description\n                                \n                                \n                                    thumbnail\n                                \n                                \n                                    visibility\n                                \n                                \n                                    author\n                                \n                                \n                                    uploadDate\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/models/video.model.ts:40\n                            \n                        \n\n                \n                    \n                            Constructs a Video instance.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The data object containing video properties.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/models/video.model.ts:35\n                        \n                    \n\n            \n                \n                    The author of the video.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/models/video.model.ts:20\n                        \n                    \n\n            \n                \n                    The description of the video (optional).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/models/video.model.ts:10\n                        \n                    \n\n            \n                \n                    The unique identifier for the video.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _thumbnail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Thumbnail\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/models/video.model.ts:25\n                        \n                    \n\n            \n                \n                    The thumbnail image of the video.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/models/video.model.ts:15\n                        \n                    \n\n            \n                \n                    The title of the video.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _uploadDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/models/video.model.ts:40\n                        \n                    \n\n            \n                \n                    The upload date of the video.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _visibility\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VideoVisibilityEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/models/video.model.ts:30\n                        \n                    \n\n            \n                \n                    The visibility status of the video.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/models/video.model.ts:60\n                                \n                            \n                    \n                        \n                                Gets the video ID.\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n\n                \n                    \n                        gettitle()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/models/video.model.ts:68\n                                \n                            \n                    \n                        \n                                Gets the video title.\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n\n                \n                    \n                        getdescription()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/models/video.model.ts:76\n                                \n                            \n                    \n                        \n                                Gets the video description.\n\n\n                                \n                                \n                                \n                                    Returns :     string | undefined\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        thumbnail\n                    \n                \n\n                \n                    \n                        getthumbnail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/models/video.model.ts:84\n                                \n                            \n                    \n                        \n                                Gets the video thumbnail.\n\n\n                                \n                                \n                                \n                                    Returns :         Thumbnail\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        visibility\n                    \n                \n\n                \n                    \n                        getvisibility()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/models/video.model.ts:92\n                                \n                            \n                    \n                        \n                                Gets the video visibility status.\n\n\n                                \n                                \n                                \n                                    Returns :         VideoVisibilityEnum\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        author\n                    \n                \n\n                \n                    \n                        getauthor()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/models/video.model.ts:100\n                                \n                            \n                    \n                        \n                                Gets the video author.\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        uploadDate\n                    \n                \n\n                \n                    \n                        getuploadDate()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/models/video.model.ts:108\n                                \n                            \n                    \n                        \n                                Gets the video upload date.\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { VideoVisibilityEnum } from '../enums/enums';\n\n/**\n * Class representing a video.\n */\nexport class Video {\n  /**\n   * The unique identifier for the video.\n   */\n  private readonly _id: string;\n\n  /**\n   * The title of the video.\n   */\n  private readonly _title: string;\n\n  /**\n   * The description of the video (optional).\n   */\n  private readonly _description?: string;\n\n  /**\n   * The thumbnail image of the video.\n   */\n  private readonly _thumbnail: Thumbnail;\n\n  /**\n   * The visibility status of the video.\n   */\n  private readonly _visibility: VideoVisibilityEnum;\n\n  /**\n   * The author of the video.\n   */\n  private readonly _author: string;\n\n  /**\n   * The upload date of the video.\n   */\n  private readonly _uploadDate: string;\n\n  /**\n   * Constructs a Video instance.\n   * @param data The data object containing video properties.\n   */\n  constructor(data: any) {\n    this._id = data?.id;\n    this._title = data?.title;\n    this._description = data?.description;\n    this._thumbnail = new Thumbnail(data?.thumbnail);\n    this._visibility = data?.visibility;\n    this._author = data?.author;\n    this._uploadDate = data.uploadDate;\n  }\n\n  /**\n   * Gets the video ID.\n   * @returns The video ID.\n   */\n  public get id(): string {\n    return this._id;\n  }\n\n  /**\n   * Gets the video title.\n   * @returns The video title.\n   */\n  public get title(): string {\n    return this._title;\n  }\n\n  /**\n   * Gets the video description.\n   * @returns The video description or undefined if not available.\n   */\n  public get description(): string | undefined {\n    return this._description;\n  }\n\n  /**\n   * Gets the video thumbnail.\n   * @returns The video thumbnail.\n   */\n  public get thumbnail(): Thumbnail {\n    return this._thumbnail;\n  }\n\n  /**\n   * Gets the video visibility status.\n   * @returns The video visibility status.\n   */\n  public get visibility(): VideoVisibilityEnum {\n    return this._visibility;\n  }\n\n  /**\n   * Gets the video author.\n   * @returns The video author.\n   */\n  public get author(): string {\n    return this._author;\n  }\n\n  /**\n   * Gets the video upload date.\n   * @returns The video upload date.\n   */\n  public get uploadDate(): string {\n    return this._uploadDate;\n  }\n}\n\n/**\n * Class representing a video thumbnail.\n */\nexport class Thumbnail {\n  /**\n   * The URL of the thumbnail image.\n   */\n  private readonly _url: string;\n\n  /**\n   * The height of the thumbnail image.\n   */\n  private readonly _height: number;\n\n  /**\n   * The width of the thumbnail image.\n   */\n  private readonly _width: number;\n\n  /**\n   * Constructs a Thumbnail instance.\n   * @param data The data object containing thumbnail properties.\n   */\n  constructor(data: any) {\n    this._url = data?.url;\n    this._height = data?.height;\n    this._width = data?.width;\n  }\n\n  /**\n   * Gets the thumbnail URL.\n   * @returns The thumbnail URL.\n   */\n  get url(): string {\n    return this._url;\n  }\n\n  /**\n   * Gets the thumbnail height.\n   * @returns The thumbnail height.\n   */\n  get height(): number {\n    return this._height;\n  }\n\n  /**\n   * Gets the thumbnail width.\n   * @returns The thumbnail width.\n   */\n  get width(): number {\n    return this._width;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VideoCardComponent.html":{"url":"components/VideoCardComponent.html","title":"component - VideoCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VideoCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/videos/components/video-card/video-card.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component representing a single video card.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-video-card\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            DatePipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./video-card.component.html\n            \n\n\n\n            \n                styleUrl\n                ./video-card.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openVideo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                video\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/videos/components/video-card/video-card.component.ts:22\n                            \n                        \n\n                \n                    \n                            Constructs a VideoCardComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Angular Router for navigation.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        video\n                    \n                \n                \n                    \n                        Type :         Video\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/videos/components/video-card/video-card.component.ts:22\n                            \n                        \n                \n                    \n                        The video object to be displayed in the card.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        openVideo\n                        \n                    \n                \n            \n            \n                \nopenVideo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/videos/components/video-card/video-card.component.ts:33\n                        \n                    \n\n\n            \n                \n                        Navigates to the video watch page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\nimport { Video } from '../../../../shared/models/video.model';\nimport { DatePipe } from '@angular/common';\nimport { Router } from '@angular/router';\n\n/**\n * Component representing a single video card.\n */\n@Component({\n  selector: 'app-video-card',\n  standalone: true,\n  templateUrl: './video-card.component.html',\n  styleUrl: './video-card.component.scss',\n  imports: [DatePipe],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VideoCardComponent {\n  /**\n   * The video object to be displayed in the card.\n   */\n  @Input() video!: Video;\n\n  /**\n   * Constructs a VideoCardComponent.\n   * @param router The Angular Router for navigation.\n   */\n  constructor(private router: Router) {}\n\n  /**\n   * Navigates to the video watch page.\n   */\n  openVideo() {\n    this.router.navigate(['videos/watch', this.video.id]);\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      {{ video.title }}\n    \n    \n      {{ video.author }}\n      {{ video.uploadDate | date }}\n    \n    {{ video.description }}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{ video.title }}              {{ video.author }}      {{ video.uploadDate | date }}        {{ video.description }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'VideoCardComponent', 'selector': 'app-video-card'},{'name': 'VideoPlayerComponent', 'selector': 'app-video-player'},{'name': 'VideosDashboardComponent', 'selector': 'app-videos-dashboard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VideoCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VideoHttpService.html":{"url":"injectables/VideoHttpService.html","title":"injectable - VideoHttpService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VideoHttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/videos/services/video-http.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for fetching video data from different sources.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                nextPageToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchMockApiVideos\n                            \n                            \n                                fetchVideos\n                            \n                            \n                                fetchYoutubeVideos\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/videos/services/video-http.service.ts:29\n                            \n                        \n\n                \n                    \n                            Constructs a VideoHttpService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The HTTP client used for making API requests.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchMockApiVideos\n                        \n                    \n                \n            \n            \n                \nfetchMockApiVideos()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/videos/services/video-http.service.ts:102\n                        \n                    \n\n\n            \n                \n                        Fetches videos from a mock API.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An observable of an array of MockVideo objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchVideos\n                        \n                    \n                \n            \n            \n                \nfetchVideos()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/videos/services/video-http.service.ts:41\n                        \n                    \n\n\n            \n                \n                        Fetches videos from the configured source.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An observable of an array of Video objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchYoutubeVideos\n                        \n                    \n                \n            \n            \n                \nfetchYoutubeVideos(query: string, count: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/videos/services/video-http.service.ts:64\n                        \n                    \n\n\n            \n                \n                        Fetches YouTube videos based on a query.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'education videos'\n                                            \n\n                                            \n                                                    The search query for YouTube videos.\n\n                                            \n                                        \n                                        \n                                                count\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    15\n                                            \n\n                                            \n                                                    The number of videos to fetch.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An observable of an array of YouTubeVideo objects.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        nextPageToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/videos/services/video-http.service.ts:29\n                        \n                    \n\n            \n                \n                    Token for fetching the next page of YouTube videos.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\nimport { map, Observable, of, tap } from 'rxjs';\n\nimport { environment } from '../../../../environments/environment';\nimport { Video } from '../../../shared/models/video.model';\nimport {\n  VideoSourceEnum,\n  VideoVisibilityEnum\n} from '../../../shared/enums/enums';\nimport { MockVideo } from '../../../shared/models/mock-video.model';\nimport { YouTubeVideo } from '../../../shared/models/youtube-video.model';\nimport {\n  mapMockVideoToVideo,\n  mapYouTubeVideoToVideo\n} from '../../../core/utils/video-mapper';\n\n/**\n * Service for fetching video data from different sources.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class VideoHttpService {\n  /**\n   * Token for fetching the next page of YouTube videos.\n   */\n  public nextPageToken = '';\n\n  /**\n   * Constructs a VideoHttpService.\n   * @param http The HTTP client used for making API requests.\n   */\n  constructor(private readonly http: HttpClient) {}\n\n  /**\n   * Fetches videos from the configured source.\n   * @returns An observable of an array of Video objects.\n   */\n  fetchVideos(): Observable {\n    if (environment.videoSource === VideoSourceEnum.YOUTUBE) {\n      return this.fetchYoutubeVideos().pipe(\n        map((res: any) =>\n          res.map((item: YouTubeVideo) => mapYouTubeVideoToVideo(item))\n        )\n      );\n    } else if (environment.videoSource === VideoSourceEnum.MOCK_API) {\n      return this.fetchMockApiVideos().pipe(\n        map((res: any) =>\n          res.map((item: MockVideo) => mapMockVideoToVideo(item))\n        )\n      );\n    }\n    return of([]);\n  }\n\n  /**\n   * Fetches YouTube videos based on a query.\n   * @param query The search query for YouTube videos.\n   * @param count The number of videos to fetch.\n   * @returns An observable of an array of YouTubeVideo objects.\n   */\n  fetchYoutubeVideos(\n    query = 'education videos',\n    count: number = 15\n  ): Observable {\n    const url = environment.youTubeApiUrl;\n    const params = new HttpParams()\n      .set('part', 'snippet')\n      .set('type', 'video')\n      .set('maxResults', count)\n      .set('q', query)\n      .set('key', environment.youTubeApiKey)\n      .set('pageToken', this.nextPageToken);\n\n    return this.http\n      .get(url, { params })\n      .pipe(tap((res: any) => (this.nextPageToken = res.nextPageToken)))\n      .pipe(\n        map((res: any) =>\n          res.items.map(\n            (item: any) =>\n              ({\n                videoId: item.id.videoId,\n                videoTitle: item.snippet.title,\n                videoDescription: item.snippet.description,\n                videoThumbnail: item.snippet.thumbnails.high,\n                videoVisibility: VideoVisibilityEnum.PUBLIC,\n                videoAuthor: item.snippet.channelTitle,\n                videoPostedOn: item.snippet.publishTime\n              }) as YouTubeVideo\n          )\n        )\n      );\n  }\n\n  /**\n   * Fetches videos from a mock API.\n   * @returns An observable of an array of MockVideo objects.\n   */\n  fetchMockApiVideos(): Observable {\n    const url = environment.mockVideoApiUrl;\n\n    return this.http.get(url).pipe(\n      map((res: any) =>\n        res.map(\n          (item: any) =>\n            ({\n              id: item.id,\n              title: item.title,\n              description: item.description,\n              thumbnail: item.thumbnail,\n              visibility: VideoVisibilityEnum.PUBLIC,\n              author: item.author,\n              uploadDate: item.uploadDate\n            }) as MockVideo\n        )\n      )\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VideoPlayerComponent.html":{"url":"components/VideoPlayerComponent.html","title":"component - VideoPlayerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VideoPlayerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/videos/components/video-player/video-player.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for playing YouTube videos.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-video-player\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            YouTubePlayer\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./video-player.component.html\n            \n\n\n\n            \n                styleUrl\n                ./video-player.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                location\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                videoId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                            \n                                goHome\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/videos/components/video-player/video-player.component.ts:36\n                        \n                    \n\n\n            \n                \n                        Navigates back to the previous page in the browser's history.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goHome\n                        \n                    \n                \n            \n            \n                \ngoHome()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/videos/components/video-player/video-player.component.ts:43\n                        \n                    \n\n\n            \n                \n                        Navigates to the home page of the application.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Location)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/videos/components/video-player/video-player.component.ts:21\n                        \n                    \n\n            \n                \n                    Service to interact with the browser's URL.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/videos/components/video-player/video-player.component.ts:26\n                        \n                    \n\n            \n                \n                    Service to handle navigation within the app.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        videoId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute).snapshot.paramMap.get('id')!\n                    \n                \n                    \n                        \n                                Defined in src/app/features/videos/components/video-player/video-player.component.ts:31\n                        \n                    \n\n            \n                \n                    The ID of the video to be played, extracted from the route parameters.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Location } from '@angular/common';\nimport { Component, inject } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { YouTubePlayer } from '@angular/youtube-player';\n\n/**\n * Component for playing YouTube videos.\n */\n@Component({\n  selector: 'app-video-player',\n  standalone: true,\n  imports: [YouTubePlayer],\n  templateUrl: './video-player.component.html',\n  styleUrl: './video-player.component.scss'\n})\nexport class VideoPlayerComponent {\n  /**\n   * Service to interact with the browser's URL.\n   */\n  private location = inject(Location);\n\n  /**\n   * Service to handle navigation within the app.\n   */\n  private router = inject(Router);\n\n  /**\n   * The ID of the video to be played, extracted from the route parameters.\n   */\n  videoId = inject(ActivatedRoute).snapshot.paramMap.get('id')!;\n\n  /**\n   * Navigates back to the previous page in the browser's history.\n   */\n  goBack() {\n    this.location.back();\n  }\n\n  /**\n   * Navigates to the home page of the application.\n   */\n  goHome() {\n    this.router.navigateByUrl('/');\n  }\n}\n\n    \n\n    \n        \n  \n    \n      arrow_back\n      Back\n    \n    \n      home\n      Home\n    \n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            arrow_back      Back              home      Home              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'VideoCardComponent', 'selector': 'app-video-card'},{'name': 'VideoPlayerComponent', 'selector': 'app-video-player'},{'name': 'VideosDashboardComponent', 'selector': 'app-videos-dashboard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VideoPlayerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VideoService.html":{"url":"injectables/VideoService.html","title":"injectable - VideoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VideoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/videos/services/video.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing video data.\nProvides a signal to store and update the list of videos.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                videos\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/videos/services/video.service.ts:17\n                            \n                        \n\n                \n                    \n                            Constructs a VideoService.\nInitializes the video signal.\n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        videos\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/features/videos/services/video.service.ts:17\n                        \n                    \n\n            \n                \n                    Signal to store the list of videos.\nThis signal can be updated with new video data.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal } from '@angular/core';\n\nimport { Video } from '../../../shared/models/video.model';\n\n/**\n * Service for managing video data.\n * Provides a signal to store and update the list of videos.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class VideoService {\n  /**\n   * Signal to store the list of videos.\n   * This signal can be updated with new video data.\n   */\n  public videos = signal([]);\n\n  /**\n   * Constructs a VideoService.\n   * Initializes the video signal.\n   */\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VideosDashboardComponent.html":{"url":"components/VideosDashboardComponent.html","title":"component - VideosDashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VideosDashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/videos/components/videos-dashboard/videos-dashboard.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for displaying a dashboard of videos.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-videos-dashboard\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                VideoCardComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./videos-dashboard.component.html\n            \n\n\n\n            \n                styleUrl\n                ./videos-dashboard.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadingVideos\n                            \n                            \n                                    Public\n                                videoService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadVideos\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onScroll\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:scroll\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(videoHttpService: VideoHttpService, videoService: VideoService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/videos/components/videos-dashboard/videos-dashboard.component.ts:39\n                            \n                        \n\n                \n                    \n                            Constructor for VideosDashboardComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        videoHttpService\n                                                  \n                                                        \n                                                                        VideoHttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for fetching videos from the server.\n\n                                                        \n                                                \n                                                \n                                                        videoService\n                                                  \n                                                        \n                                                                        VideoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for managing video data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:scroll\n                        \n                    \n                \n            \n            \n                \nwindow:scroll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/videos/components/videos-dashboard/videos-dashboard.component.ts:29\n                        \n                    \n\n\n            \n                \n                        Host listener for window scroll events.\nLoads more videos when the user scrolls to the bottom of the page.\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadVideos\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadVideos()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/videos/components/videos-dashboard/videos-dashboard.component.ts:64\n                        \n                    \n\n\n            \n                \n                        Loads videos from the server and updates the video list.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/videos/components/videos-dashboard/videos-dashboard.component.ts:55\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that is called after data-bound properties of a directive are initialized.\nInitializes video loading.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onScroll\n                        \n                    \n                \n            \n            \n                \n                        \n                    onScroll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:scroll', undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/app/features/videos/components/videos-dashboard/videos-dashboard.component.ts:29\n                        \n                    \n\n\n            \n                \n                        Host listener for window scroll events.\nLoads more videos when the user scrolls to the bottom of the page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadingVideos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/videos/components/videos-dashboard/videos-dashboard.component.ts:22\n                        \n                    \n\n            \n                \n                    Indicates whether videos are currently being loaded.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        videoService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VideoService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/videos/components/videos-dashboard/videos-dashboard.component.ts:48\n                        \n                    \n\n            \n                \n                    Service for managing video data.\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener, OnInit } from '@angular/core';\n\nimport { Video } from '../../../../shared/models/video.model';\nimport { VideoHttpService } from '../../services/video-http.service';\nimport { VideoCardComponent } from '../video-card/video-card.component';\nimport { VideoService } from '../../services/video.service';\n\n/**\n * Component for displaying a dashboard of videos.\n */\n@Component({\n  selector: 'app-videos-dashboard',\n  standalone: true,\n  imports: [VideoCardComponent],\n  templateUrl: './videos-dashboard.component.html',\n  styleUrl: './videos-dashboard.component.scss'\n})\nexport class VideosDashboardComponent implements OnInit {\n  /**\n   * Indicates whether videos are currently being loaded.\n   */\n  private loadingVideos: boolean = false;\n\n  /**\n   * Host listener for window scroll events.\n   * Loads more videos when the user scrolls to the bottom of the page.\n   */\n  @HostListener('window:scroll', [])\n  onScroll(): void {\n    const videoElements = document.getElementsByClassName('video-card');\n    const lastVideoElement = videoElements[videoElements.length - 1];\n    if (lastVideoElement) {\n      const rect = lastVideoElement.getBoundingClientRect();\n      const isVisible = rect.bottom  {\n        this.videoService.videos.update((currentVideos) => [\n          ...currentVideos,\n          ...videos\n        ]);\n        this.loadingVideos = false;\n      },\n      error: (error: any) => {\n        console.log(error);\n        this.loadingVideos = false;\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  @for (video of videoService.videos(); let idx = $index, e = $even; track video.id + '_'+idx) {\n    \n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @for (video of videoService.videos(); let idx = $index, e = $even; track video.id + \\'_\\'+idx) {      }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'VideoCardComponent', 'selector': 'app-video-card'},{'name': 'VideoPlayerComponent', 'selector': 'app-video-player'},{'name': 'VideosDashboardComponent', 'selector': 'app-videos-dashboard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VideosDashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/YouTubeVideo.html":{"url":"interfaces/YouTubeVideo.html","title":"interface - YouTubeVideo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  YouTubeVideo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/youtube-video.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a YouTube video.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            videoAuthor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            videoDescription\n                                        \n                                \n                                \n                                        \n                                            videoId\n                                        \n                                \n                                \n                                        \n                                            videoPostedOn\n                                        \n                                \n                                \n                                        \n                                            videoThumbnail\n                                        \n                                \n                                \n                                        \n                                            videoTitle\n                                        \n                                \n                                \n                                        \n                                            videoVisibility\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        videoAuthor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        videoAuthor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The author of the YouTube video.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        videoDescription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        videoDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The description of the YouTube video (optional).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        videoId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        videoId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The unique identifier for the YouTube video.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        videoPostedOn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        videoPostedOn:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The date the YouTube video was posted.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        videoThumbnail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        videoThumbnail:         Thumbnail\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Thumbnail\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The thumbnail image of the YouTube video.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        videoTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        videoTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the YouTube video.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        videoVisibility\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        videoVisibility:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The visibility status of the YouTube video.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Thumbnail } from './video.model';\n\n/**\n * Interface representing a YouTube video.\n */\nexport interface YouTubeVideo {\n  /**\n   * The unique identifier for the YouTube video.\n   */\n  videoId: string;\n\n  /**\n   * The title of the YouTube video.\n   */\n  videoTitle: string;\n\n  /**\n   * The description of the YouTube video (optional).\n   */\n  videoDescription?: string;\n\n  /**\n   * The thumbnail image of the YouTube video.\n   */\n  videoThumbnail: Thumbnail;\n\n  /**\n   * The visibility status of the YouTube video.\n   */\n  videoVisibility: string;\n\n  /**\n   * The author of the YouTube video.\n   */\n  videoAuthor: string;\n\n  /**\n   * The date the YouTube video was posted.\n   */\n  videoPostedOn: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/services/auth.guard.ts\n            \n            variable\n            authGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/services/auth.interceptor.ts\n            \n            variable\n            authInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/utils/video-mapper.ts\n            \n            function\n            mapMockVideoToVideo\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/core/utils/video-mapper.ts\n            \n            function\n            mapYouTubeVideoToVideo\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/features/videos/components/video-card/video-card.component.ts\n            \n            component\n            VideoCardComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/features/videos/components/video-player/video-player.component.ts\n            \n            component\n            VideoPlayerComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/features/videos/components/videos-dashboard/videos-dashboard.component.ts\n            \n            component\n            VideosDashboardComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/features/videos/services/video-http.service.ts\n            \n            injectable\n            VideoHttpService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/features/videos/services/video.service.ts\n            \n            injectable\n            VideoService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/mock-video.model.ts\n            \n            interface\n            MockVideo\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/shared/models/video.model.ts\n            \n            class\n            Thumbnail\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/shared/models/video.model.ts\n            \n            class\n            Video\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/shared/models/youtube-video.model.ts\n            \n            interface\n            YouTubeVideo\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                        src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.0.0\n        \n            @angular/cdk : ^18.2.14\n        \n            @angular/common : ^18.0.0\n        \n            @angular/compiler : ^18.0.0\n        \n            @angular/core : ^18.0.0\n        \n            @angular/forms : ^18.0.0\n        \n            @angular/material : ^18.2.14\n        \n            @angular/platform-browser : ^18.0.0\n        \n            @angular/platform-browser-dynamic : ^18.0.0\n        \n            @angular/platform-server : ^18.0.0\n        \n            @angular/router : ^18.0.0\n        \n            @angular/ssr : ^18.0.6\n        \n            @angular/youtube-player : ^18.2.14\n        \n            bootstrap : ^5.3.5\n        \n            express : ^4.18.2\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            VideoSourceEnum   (src/.../enums.ts)\n                        \n                        \n                            VideoVisibilityEnum   (src/.../enums.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/enums/enums.ts\n    \n        \n            \n                \n                    \n                        \n                        VideoSourceEnum\n                    \n                \n                        \n                            \n                                 YOUTUBE\n                            \n                        \n                        \n                            \n                                Value : YouTube\n                            \n                        \n                        \n                            \n                                 MOCK_API\n                            \n                        \n                        \n                            \n                                Value : MockApi\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        VideoVisibilityEnum\n                    \n                \n                        \n                            \n                                 PUBLIC\n                            \n                        \n                        \n                            \n                                Value : Public\n                            \n                        \n                        \n                            \n                                 PRIVATE\n                            \n                        \n                        \n                            \n                                Value : Private\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            mapMockVideoToVideo   (src/.../video-mapper.ts)\n                        \n                        \n                            mapYouTubeVideoToVideo   (src/.../video-mapper.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/utils/video-mapper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mapMockVideoToVideo\n                        \n                    \n                \n            \n            \n                \nmapMockVideoToVideo(mockVideo: MockVideo)\n                \n            \n\n\n\n\n            \n                \n                        Maps a MockVideo object to a Video object.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                mockVideo\n                                            \n                                                            MockVideo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The MockVideo object to map.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Video\n\n                        \n                            \n                                A Video object with properties mapped from the MockVideo.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapYouTubeVideoToVideo\n                        \n                    \n                \n            \n            \n                \nmapYouTubeVideoToVideo(youtubeVideo: YouTubeVideo)\n                \n            \n\n\n\n\n            \n                \n                        Maps a YouTubeVideo object to a Video object.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                youtubeVideo\n                                            \n                                                            YouTubeVideo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The YouTubeVideo object to map.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Video\n\n                        \n                            \n                                A Video object with properties mapped from the YouTubeVideo.\n\n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nYoutubeLite\n\nYoutubeLite is a frontend-only learning project built with Angular 18, designed to explore best practices in modern frontend development, testing, and tooling.\nThis project was generated with Angular CLI version 18.0.6.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nTech Stack & Tooling\nThis project is powered by a modern frontend ecosystem and integrates several quality assurance and developer tooling configurations:\n\nAngular 18 – The latest version of Angular for building high-performance, scalable single-page applications using standalone components and improved testing APIs.\nESLint – Linter configured using eslint.config.mjs for enforcing consistent code quality and best practices. Includes Angular-specific and TypeScript rules.\nKarma – Configured in karma.conf.js to ensure a minimum of 90% test coverage across statements, branches, functions, and lines. Reports are generated in HTML, LCOV, and summary formats.\nHusky Git Hooks – Enforces CI/CD-like checks before commits and pushes:\ncommit-msg – Validates the format of commit messages to ensure consistency.\npre-commit – Automatically runs Prettier and ESLint via lint-staged for staged files.\npre-push – Executes unit tests, checks for test coverage and builds code before pushing to repository. Push is blocked if coverage is below threshold or tests fail.\n\n\nlint-staged – Optimizes linting to only staged files, improving pre-commit performance.\nPrettier – Formatter integrated with .prettierrc and .prettierignore to maintain consistent code styling.\nCompoDoc – Documentation tool for generating a live, navigable UI documentation site from Angular components and services.\n\nRunning unit tests\nExecute the unit tests via Karma.\nWatch Mode + Browser Report\nExample :npm run test\nLaunches in Chrome\nOpens browser with live Karma test results\n\nHeadless Mode with Coverage\nExample :npm run test:no-watch\nUses ChromeHeadless\nGenerates code coverage report\nCoverage thresholds:\nStatements: >=90%\nBranches: >=90%\nFunctions: >=90%\nLines: >=90%\n\n\n\nLinting\nExample :npm run lintLinting using ESLInt\nExample :npm run eslint\nUses eslint.config.mjs\nIgnores: dist/, coverage/, documentation/ and other unnecessary files\n\nStaged File Linting\nConfigured via .lintstagedrc and triggered by Husky on pre-commit.\nFormatting\nExample :npm run format\nUses Prettier\nConfigured with .prettierrc and .prettierignore\n\nGit Hooks (via Husky)\n\n\n\nHook\nAction\n\n\n\n\ncommit-msg\nValidates commit message format\n\n\npre-commit\nRuns ESLint + Prettier via lint-staged\n\n\npre-push\nRuns test:no-watch + ng build and blocks push if tests/coverage fail\n\n\n\nDevelopment Server\nExample :ng serveNavigate to: http://localhost:4200\nBuild\nExample :ng buildOutput is saved to the dist/ directory.\nLive Documentation\nAuto-generated using CompoDoc and deployed on GitHub Pages\n📖 Live Docs\nGenerate locally:\nExample :npm run docs:buildHelp\nRun:\nExample :ng helpOr refer to the Angular CLI Documentation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            authGuard   (src/.../auth.guard.ts)\n                        \n                        \n                            authInterceptor   (src/.../auth.interceptor.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n    provideClientHydration(),\n    provideAnimationsAsync(),\n    provideHttpClient(withFetch()),\n  ],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/services/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : () => {\n  return true;\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/services/auth.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (req, next) => {\n  return next(req);\n}\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(AppComponent, config)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideServerRendering()],\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
